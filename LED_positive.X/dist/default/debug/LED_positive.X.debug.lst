

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Dec 22 03:07:32 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           ; Version 1.44
    25                           ; Generated 14/09/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4520 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _LATDbits	set	3980
    59  0000                     _LATCbits	set	3979
    60  0000                     _PORTBbits	set	3969
    61  0000                     _LATBbits	set	3978
    62  0000                     _TRISBbits	set	3987
    63  0000                     _LATD	set	3980
    64  0000                     _LATC	set	3979
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISC	set	3988
    67  0000                     _RB5	set	31757
    68  0000                     _RCONbits	set	4048
    69  0000                     _OSCCONbits	set	4051
    70  0000                     _INTCON2bits	set	4081
    71  0000                     _INTCONbits	set	4082
    72                           
    73                           ; #config settings
    74  0000                     
    75                           	psect	cinit
    76  001066                     __pcinit:
    77                           	opt stack 0
    78  001066                     start_initialization:
    79                           	opt stack 0
    80  001066                     __initialization:
    81                           	opt stack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (17 bytes)
    84  001066  EE00  F038         	lfsr	0,__pbssCOMRAM
    85  00106A  0E11               	movlw	17
    86  00106C                     clear_0:
    87  00106C  6AEE               	clrf	postinc0,c
    88  00106E  06E8               	decf	wreg,f,c
    89  001070  E1FD               	bnz	clear_0
    90  001072                     end_of_initialization:
    91                           	opt stack 0
    92  001072                     __end_of__initialization:
    93                           	opt stack 0
    94  001072  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    95  001074  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    96  001076  0100               	movlb	0
    97  001078  EFAE  F007         	goto	_main	;jump to C main() function
    98                           postinc0	equ	0xFEE
    99                           wreg	equ	0xFE8
   100                           
   101                           	psect	bssCOMRAM
   102  000038                     __pbssCOMRAM:
   103                           	opt stack 0
   104  000038                     _distance:
   105                           	opt stack 0
   106  000038                     	ds	3
   107  00003B                     _white:
   108                           	opt stack 0
   109  00003B                     	ds	2
   110  00003D                     _blue2:
   111                           	opt stack 0
   112  00003D                     	ds	2
   113  00003F                     _green2:
   114                           	opt stack 0
   115  00003F                     	ds	2
   116  000041                     _red2:
   117                           	opt stack 0
   118  000041                     	ds	2
   119  000043                     _blue:
   120                           	opt stack 0
   121  000043                     	ds	2
   122  000045                     _green:
   123                           	opt stack 0
   124  000045                     	ds	2
   125  000047                     _red:
   126                           	opt stack 0
   127  000047                     	ds	2
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           
   131                           	psect	cstackBANK0
   132  000080                     __pcstackBANK0:
   133                           	opt stack 0
   134  000080                     wshow@i:
   135                           	opt stack 0
   136                           
   137                           ; 2 bytes @ 0x0
   138  000080                     	ds	2
   139  000082                     main@k:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0x2
   143  000082                     	ds	2
   144  000084                     main@l:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x4
   148  000084                     	ds	2
   149                           postinc0	equ	0xFEE
   150                           wreg	equ	0xFE8
   151                           
   152                           	psect	cstackCOMRAM
   153  000001                     __pcstackCOMRAM:
   154                           	opt stack 0
   155  000001                     rgbshowone@rval:
   156                           	opt stack 0
   157  000001                     rgbshowsix@rval:
   158                           	opt stack 0
   159                           
   160                           ; 2 bytes @ 0x0
   161  000001                     	ds	2
   162  000003                     rgbshowone@gval:
   163                           	opt stack 0
   164  000003                     rgbshowsix@gval:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x2
   168  000003                     	ds	2
   169  000005                     rgbshowone@bval:
   170                           	opt stack 0
   171  000005                     rgbshowsix@bval:
   172                           	opt stack 0
   173                           
   174                           ; 2 bytes @ 0x4
   175  000005                     	ds	2
   176  000007                     rgbshowone@flag:
   177                           	opt stack 0
   178  000007                     rgbshowsix@rval2:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x6
   182  000007                     	ds	2
   183  000009                     rgbshowone@i:
   184                           	opt stack 0
   185  000009                     rgbshowsix@gval2:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x8
   189  000009                     	ds	2
   190  00000B                     rgbshowone@i_535:
   191                           	opt stack 0
   192  00000B                     rgbshowsix@bval2:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0xA
   196  00000B                     	ds	2
   197  00000D                     rgbshowone@i_536:
   198                           	opt stack 0
   199  00000D                     rgbshowsix@flag:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0xC
   203  00000D                     	ds	2
   204  00000F                     rgbshowone@i_537:
   205                           	opt stack 0
   206  00000F                     rgbshowsix@i:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0xE
   210  00000F                     	ds	2
   211  000011                     rgbshowsix@i_547:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x10
   215  000011                     	ds	2
   216  000013                     rgbshow@rval:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x12
   220  000013                     	ds	2
   221  000015                     rgbshow@gval:
   222                           	opt stack 0
   223                           
   224                           ; 2 bytes @ 0x14
   225  000015                     	ds	2
   226  000017                     rgbshow@bval:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x16
   230  000017                     	ds	2
   231  000019                     rgbshow@rval2:
   232                           	opt stack 0
   233                           
   234                           ; 2 bytes @ 0x18
   235  000019                     	ds	2
   236  00001B                     rgbshow@gval2:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x1A
   240  00001B                     	ds	2
   241  00001D                     rgbshow@bval2:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x1C
   245  00001D                     	ds	2
   246  00001F                     rgbshow@flag:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x1E
   250  00001F                     	ds	2
   251  000021                     rgbshow@i:
   252                           	opt stack 0
   253                           
   254                           ; 2 bytes @ 0x20
   255  000021                     	ds	2
   256  000023                     ??_rgbstart:
   257                           
   258                           ; 1 bytes @ 0x22
   259  000023                     	ds	1
   260  000024                     ??_Hi:
   261                           
   262                           ; 1 bytes @ 0x23
   263  000024                     	ds	18
   264  000036                     wshow@wval:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x35
   268  000036                     	ds	2
   269  000038                     postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           
   272                           ; 1 bytes @ 0x37
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 396 in file "positive.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;  l               2    4[BANK0 ] int 
   283 ;;  k               2    2[BANK0 ] int 
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   293 ;;      Params:         0       0       0       0       0       0       0
   294 ;;      Locals:         0       4       0       0       0       0       0
   295 ;;      Temps:          0       0       0       0       0       0       0
   296 ;;      Totals:         0       4       0       0       0       0       0
   297 ;;Total ram usage:        4 bytes
   298 ;; Hardware stack levels required when called:    6
   299 ;; This function calls:
   300 ;;		_init
   301 ;;		_wstart
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text0
   308  000F5C                     __ptext0:
   309                           	opt stack 0
   310  000F5C                     _main:
   311                           	opt stack 25
   312                           
   313                           ;positive.c: 397: init();
   314                           
   315                           ;incstack = 0
   316  000F5C  EC7B  F007         	call	_init	;wreg free
   317  000F60                     
   318                           ;positive.c: 399: wstart();
   319  000F60  ECFC  F007         	call	_wstart	;wreg free
   320                           
   321                           ;positive.c: 400: int k = 10 , l = 255;
   322  000F64  0E00               	movlw	0
   323  000F66  0100               	movlb	0	; () banked
   324  000F68  6F83               	movwf	(main@k+1)& (0+255),b
   325  000F6A  0E0A               	movlw	10
   326  000F6C  6F82               	movwf	main@k& (0+255),b
   327                           
   328                           ; BSR set to: 0
   329  000F6E  0E00               	movlw	0
   330  000F70  6F85               	movwf	(main@l+1)& (0+255),b
   331  000F72  6984               	setf	main@l& (0+255),b
   332                           
   333                           ;positive.c: 401: while( k > 0 ) {
   334  000F74  D011               	goto	l196
   335  000F76                     l1653:
   336                           
   337                           ; BSR set to: 0
   338                           ;positive.c: 402: l = 255;
   339  000F76  0E00               	movlw	0
   340  000F78  6F85               	movwf	(main@l+1)& (0+255),b
   341  000F7A  6984               	setf	main@l& (0+255),b
   342                           
   343                           ;positive.c: 403: while( l > 0) {
   344  000F7C  D003               	goto	l198
   345  000F7E                     l1655:
   346                           
   347                           ; BSR set to: 0
   348                           ;positive.c: 404: l--;
   349  000F7E  0784               	decf	main@l& (0+255),f,b
   350  000F80  A0D8               	btfss	status,0,c
   351  000F82  0785               	decf	(main@l+1)& (0+255),f,b
   352  000F84                     l198:
   353                           
   354                           ; BSR set to: 0
   355                           
   356                           ; BSR set to: 0
   357  000F84  BF85               	btfsc	(main@l+1)& (0+255),7,b
   358  000F86  D005               	goto	u1480
   359  000F88  5185               	movf	(main@l+1)& (0+255),w,b
   360  000F8A  E1F9               	bnz	l1655
   361  000F8C  0584               	decf	main@l& (0+255),w,b
   362  000F8E  B0D8               	btfsc	status,0,c
   363  000F90  D7F6               	goto	l199
   364  000F92                     u1480:
   365                           
   366                           ; BSR set to: 0
   367                           ;positive.c: 405: }
   368                           ;positive.c: 406: k--;
   369                           
   370                           ; BSR set to: 0
   371  000F92  0782               	decf	main@k& (0+255),f,b
   372  000F94  A0D8               	btfss	status,0,c
   373  000F96  0783               	decf	(main@k+1)& (0+255),f,b
   374  000F98                     l196:
   375                           
   376                           ; BSR set to: 0
   377                           
   378                           ; BSR set to: 0
   379  000F98  BF83               	btfsc	(main@k+1)& (0+255),7,b
   380  000F9A  D005               	goto	u1490
   381  000F9C  5183               	movf	(main@k+1)& (0+255),w,b
   382  000F9E  E1EB               	bnz	l1653
   383  000FA0  0582               	decf	main@k& (0+255),w,b
   384  000FA2  B0D8               	btfsc	status,0,c
   385  000FA4  D7E8               	goto	l197
   386  000FA6                     u1490:
   387                           
   388                           ; BSR set to: 0
   389                           ;positive.c: 407: }
   390                           ;positive.c: 409: if(RB5){
   391  000FA6  AA81               	btfss	3969,5,c	;volatile
   392  000FA8  D7DB               	goto	l195
   393                           
   394                           ; BSR set to: 0
   395                           ;positive.c: 411: INTCONbits.INT0IF = 1;
   396  000FAA  82F2               	bsf	intcon,1,c	;volatile
   397                           
   398                           ; BSR set to: 0
   399                           
   400                           ; BSR set to: 0
   401  000FAC  D7D9               	goto	l195
   402  000FAE                     __end_of_main:
   403                           	opt stack 0
   404                           intcon	equ	0xFF2
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           status	equ	0xFD8
   408                           
   409 ;; *************** function _wstart *****************
   410 ;; Defined at:
   411 ;;		line 373 in file "positive.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, status,2, status,0, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   425 ;;      Params:         0       0       0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels used:    1
   431 ;; Hardware stack levels required when called:    5
   432 ;; This function calls:
   433 ;;		_wshow
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text1
   440  000FF8                     __ptext1:
   441                           	opt stack 0
   442  000FF8                     _wstart:
   443                           	opt stack 25
   444                           
   445                           ;positive.c: 374: while(white!=200){
   446                           
   447                           ; BSR set to: 0
   448                           ;incstack = 0
   449  000FF8  D008               	goto	l178
   450  000FFA                     
   451                           ;positive.c: 375: white++;
   452  000FFA  4A3B               	infsnz	_white,f,c
   453  000FFC  2A3C               	incf	_white+1,f,c
   454                           
   455                           ;positive.c: 376: wshow(white);
   456  000FFE  C03B  F036         	movff	_white,wshow@wval
   457  001002  C03C  F037         	movff	_white+1,wshow@wval+1
   458  001006  EC19  F008         	call	_wshow	;wreg free
   459  00100A                     l178:
   460  00100A  0EC8               	movlw	200
   461  00100C  183B               	xorwf	_white,w,c
   462  00100E  103C               	iorwf	_white+1,w,c
   463  001010  B4D8               	btfsc	status,2,c
   464  001012  D00A               	goto	l181
   465  001014  D7F2               	goto	l179
   466  001016                     
   467                           ;positive.c: 379: white--;
   468  001016  063B               	decf	_white,f,c
   469  001018  A0D8               	btfss	status,0,c
   470  00101A  063C               	decf	_white+1,f,c
   471                           
   472                           ;positive.c: 380: wshow(white);
   473  00101C  C03B  F036         	movff	_white,wshow@wval
   474  001020  C03C  F037         	movff	_white+1,wshow@wval+1
   475  001024  EC19  F008         	call	_wshow	;wreg free
   476  001028                     l181:
   477  001028  503B               	movf	_white,w,c
   478  00102A  103C               	iorwf	_white+1,w,c
   479  00102C  B4D8               	btfsc	status,2,c
   480  00102E  0012               	return	
   481  001030  D7F2               	goto	l182
   482  001032                     __end_of_wstart:
   483                           	opt stack 0
   484                           intcon	equ	0xFF2
   485                           postinc0	equ	0xFEE
   486                           wreg	equ	0xFE8
   487                           status	equ	0xFD8
   488                           
   489 ;; *************** function _wshow *****************
   490 ;; Defined at:
   491 ;;		line 365 in file "positive.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;  wval            2   53[COMRAM] int 
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  i               2    0[BANK0 ] int 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   505 ;;      Params:         2       0       0       0       0       0       0
   506 ;;      Locals:         0       2       0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0
   508 ;;      Totals:         2       2       0       0       0       0       0
   509 ;;Total ram usage:        4 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; Hardware stack levels required when called:    4
   512 ;; This function calls:
   513 ;;		Nothing
   514 ;; This function is called by:
   515 ;;		_wstart
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text2
   520  001032                     __ptext2:
   521                           	opt stack 0
   522  001032                     _wshow:
   523                           	opt stack 25
   524                           
   525                           ;positive.c: 367: LATDbits.LATD4=1;
   526                           
   527                           ;incstack = 0
   528  001032  888C               	bsf	3980,4,c	;volatile
   529                           
   530                           ;positive.c: 368: for(int i=0;i<200;i++){
   531  001034  0E00               	movlw	0
   532  001036  0100               	movlb	0	; () banked
   533  001038  6F81               	movwf	(wshow@i+1)& (0+255),b
   534  00103A  0E00               	movlw	0
   535  00103C  6F80               	movwf	wshow@i& (0+255),b
   536  00103E                     l1593:
   537                           
   538                           ; BSR set to: 0
   539  00103E  BF81               	btfsc	(wshow@i+1)& (0+255),7,b
   540  001040  D006               	goto	l172
   541  001042  5181               	movf	(wshow@i+1)& (0+255),w,b
   542  001044  E10F               	bnz	l175
   543  001046  0EC8               	movlw	200
   544  001048  5D80               	subwf	wshow@i& (0+255),w,b
   545  00104A  B0D8               	btfsc	status,0,c
   546  00104C  0012               	return	
   547  00104E                     l172:
   548                           
   549                           ; BSR set to: 0
   550                           ;positive.c: 369: if((wval--)==0) LATDbits.LATD4=0;
   551                           
   552                           ; BSR set to: 0
   553  00104E  0636               	decf	wshow@wval,f,c
   554  001050  A0D8               	btfss	status,0,c
   555  001052  0637               	decf	wshow@wval+1,f,c
   556  001054  2836               	incf	wshow@wval,w,c
   557  001056  E103               	bnz	l1601
   558  001058  2837               	incf	wshow@wval+1,w,c
   559  00105A  B4D8               	btfsc	status,2,c
   560                           
   561                           ; BSR set to: 0
   562  00105C  988C               	bcf	3980,4,c	;volatile
   563  00105E                     l1601:
   564                           
   565                           ; BSR set to: 0
   566  00105E  4B80               	infsnz	wshow@i& (0+255),f,b
   567  001060  2B81               	incf	(wshow@i+1)& (0+255),f,b
   568  001062  D7ED               	goto	l1593
   569  001064                     l175:
   570                           
   571                           ; BSR set to: 0
   572  001064  0012               	return		;funcret
   573  001066                     __end_of_wshow:
   574                           	opt stack 0
   575                           intcon	equ	0xFF2
   576                           postinc0	equ	0xFEE
   577                           wreg	equ	0xFE8
   578                           status	equ	0xFD8
   579                           
   580 ;; *************** function _init *****************
   581 ;; Defined at:
   582 ;;		line 34 in file "positive.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   596 ;;      Params:         0       0       0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    4
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text3
   611  000EF6                     __ptext3:
   612                           	opt stack 0
   613  000EF6                     _init:
   614                           	opt stack 26
   615                           
   616                           ;positive.c: 36: OSCCONbits.IRCF2 = 1;
   617                           
   618                           ; BSR set to: 0
   619                           ;incstack = 0
   620  000EF6  8CD3               	bsf	4051,6,c	;volatile
   621                           
   622                           ;positive.c: 37: OSCCONbits.IRCF1 = 1;
   623  000EF8  8AD3               	bsf	4051,5,c	;volatile
   624                           
   625                           ;positive.c: 38: OSCCONbits.IRCF0 = 0;
   626  000EFA  98D3               	bcf	4051,4,c	;volatile
   627                           
   628                           ;positive.c: 40: TRISC=0;
   629  000EFC  0E00               	movlw	0
   630  000EFE  6E94               	movwf	3988,c	;volatile
   631                           
   632                           ;positive.c: 41: TRISD=0;
   633  000F00  0E00               	movlw	0
   634  000F02  6E95               	movwf	3989,c	;volatile
   635                           
   636                           ;positive.c: 42: LATC=1;
   637  000F04  0E01               	movlw	1
   638  000F06  6E8B               	movwf	3979,c	;volatile
   639                           
   640                           ;positive.c: 43: LATD=1;
   641  000F08  0E01               	movlw	1
   642  000F0A  6E8C               	movwf	3980,c	;volatile
   643                           
   644                           ;positive.c: 45: TRISBbits.TRISB0=1;
   645  000F0C  8093               	bsf	3987,0,c	;volatile
   646                           
   647                           ;positive.c: 46: red=0;
   648  000F0E  0E00               	movlw	0
   649  000F10  6E48               	movwf	_red+1,c
   650  000F12  0E00               	movlw	0
   651  000F14  6E47               	movwf	_red,c
   652                           
   653                           ;positive.c: 47: green=0;
   654  000F16  0E00               	movlw	0
   655  000F18  6E46               	movwf	_green+1,c
   656  000F1A  0E00               	movlw	0
   657  000F1C  6E45               	movwf	_green,c
   658                           
   659                           ;positive.c: 48: blue=0;
   660  000F1E  0E00               	movlw	0
   661  000F20  6E44               	movwf	_blue+1,c
   662  000F22  0E00               	movlw	0
   663  000F24  6E43               	movwf	_blue,c
   664                           
   665                           ;positive.c: 49: red2=0;
   666  000F26  0E00               	movlw	0
   667  000F28  6E42               	movwf	_red2+1,c
   668  000F2A  0E00               	movlw	0
   669  000F2C  6E41               	movwf	_red2,c
   670                           
   671                           ;positive.c: 50: green2=0;
   672  000F2E  0E00               	movlw	0
   673  000F30  6E40               	movwf	_green2+1,c
   674  000F32  0E00               	movlw	0
   675  000F34  6E3F               	movwf	_green2,c
   676                           
   677                           ;positive.c: 51: blue2=0;
   678  000F36  0E00               	movlw	0
   679  000F38  6E3E               	movwf	_blue2+1,c
   680  000F3A  0E00               	movlw	0
   681  000F3C  6E3D               	movwf	_blue2,c
   682                           
   683                           ;positive.c: 53: RCONbits.IPEN=1;
   684  000F3E  8ED0               	bsf	4048,7,c	;volatile
   685                           
   686                           ;positive.c: 54: INTCONbits.GIEH=1;
   687  000F40  8EF2               	bsf	intcon,7,c	;volatile
   688                           
   689                           ;positive.c: 55: INTCONbits.INT0IF=0;
   690  000F42  92F2               	bcf	intcon,1,c	;volatile
   691                           
   692                           ;positive.c: 56: INTCONbits.INT0IE=1;
   693  000F44  88F2               	bsf	intcon,4,c	;volatile
   694                           
   695                           ;positive.c: 57: INTCON2bits.INTEDG0=1;
   696  000F46  8CF1               	bsf	intcon2,6,c	;volatile
   697                           
   698                           ;positive.c: 58: LATBbits.LATB0=0;
   699  000F48  908A               	bcf	3978,0,c	;volatile
   700                           
   701                           ;positive.c: 59: PORTBbits.RB0=0;
   702  000F4A  9081               	bcf	3969,0,c	;volatile
   703                           
   704                           ;positive.c: 61: TRISBbits.TRISB4=0;
   705  000F4C  9893               	bcf	3987,4,c	;volatile
   706                           
   707                           ;positive.c: 62: TRISBbits.TRISB5=1;
   708  000F4E  8A93               	bsf	3987,5,c	;volatile
   709                           
   710                           ;positive.c: 63: LATBbits.LATB5=0;
   711  000F50  9A8A               	bcf	3978,5,c	;volatile
   712                           
   713                           ;positive.c: 65: white=0;
   714  000F52  0E00               	movlw	0
   715  000F54  6E3C               	movwf	_white+1,c
   716  000F56  0E00               	movlw	0
   717  000F58  6E3B               	movwf	_white,c
   718  000F5A  0012               	return		;funcret
   719  000F5C                     __end_of_init:
   720                           	opt stack 0
   721                           intcon	equ	0xFF2
   722                           intcon2	equ	0xFF1
   723                           postinc0	equ	0xFEE
   724                           wreg	equ	0xFE8
   725                           status	equ	0xFD8
   726                           
   727 ;; *************** function _Hi *****************
   728 ;; Defined at:
   729 ;;		line 384 in file "positive.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   743 ;;      Params:         0       0       0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0
   745 ;;      Temps:         18       0       0       0       0       0       0
   746 ;;      Totals:        18       0       0       0       0       0       0
   747 ;;Total ram usage:       18 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    3
   750 ;; This function calls:
   751 ;;		_rgbstart
   752 ;; This function is called by:
   753 ;;		Interrupt level 2
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	intcode
   758  000008                     __pintcode:
   759                           	opt stack 0
   760  000008                     _Hi:
   761                           	opt stack 25
   762                           
   763                           ;incstack = 0
   764  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   765  00000A  EDD9  F006         	call	int_func,f	;refresh shadow registers
   766                           intcon	equ	0xFF2
   767                           intcon2	equ	0xFF1
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           status	equ	0xFD8
   771                           
   772                           	psect	intcode_body
   773  000DB2                     __pintcode_body:
   774                           	opt stack 25
   775  000DB2                     int_func:
   776                           	opt stack 25
   777  000DB2  0006               	pop		; remove dummy address from shadow register refresh
   778  000DB4  CFFA F024          	movff	pclath,??_Hi
   779  000DB8  CFFB F025          	movff	pclatu,??_Hi+1
   780  000DBC  CFE9 F026          	movff	fsr0l,??_Hi+2
   781  000DC0  CFEA F027          	movff	fsr0h,??_Hi+3
   782  000DC4  CFE1 F028          	movff	fsr1l,??_Hi+4
   783  000DC8  CFE2 F029          	movff	fsr1h,??_Hi+5
   784  000DCC  CFD9 F02A          	movff	fsr2l,??_Hi+6
   785  000DD0  CFDA F02B          	movff	fsr2h,??_Hi+7
   786  000DD4  CFF3 F02C          	movff	prodl,??_Hi+8
   787  000DD8  CFF4 F02D          	movff	prodh,??_Hi+9
   788  000DDC  CFF6 F02E          	movff	tblptrl,??_Hi+10
   789  000DE0  CFF7 F02F          	movff	tblptrh,??_Hi+11
   790  000DE4  CFF8 F030          	movff	tblptru,??_Hi+12
   791  000DE8  CFF5 F031          	movff	tablat,??_Hi+13
   792  000DEC  C049  F032         	movff	btemp,??_Hi+14
   793  000DF0  C04A  F033         	movff	btemp+1,??_Hi+15
   794  000DF4  C04B  F034         	movff	btemp+2,??_Hi+16
   795  000DF8  C04C  F035         	movff	btemp+3,??_Hi+17
   796                           
   797                           ;positive.c: 386: if(INTCONbits.INT0IF == 1) {
   798  000DFC  A2F2               	btfss	intcon,1,c	;volatile
   799  000DFE  D006               	goto	i2l189
   800                           
   801                           ;positive.c: 387: LATDbits.LATD4=0;
   802  000E00  988C               	bcf	3980,4,c	;volatile
   803                           
   804                           ;positive.c: 388: rgbstart();
   805  000E02  EC09  F000         	call	_rgbstart	;wreg free
   806                           
   807                           ;positive.c: 389: PORTBbits.RB0=0;
   808  000E06  9081               	bcf	3969,0,c	;volatile
   809                           
   810                           ;positive.c: 390: LATBbits.LATB0=0;
   811  000E08  908A               	bcf	3978,0,c	;volatile
   812                           
   813                           ;positive.c: 391: INTCONbits.INT0IF = 0;
   814  000E0A  92F2               	bcf	intcon,1,c	;volatile
   815  000E0C                     i2l189:
   816  000E0C  C035  F04C         	movff	??_Hi+17,btemp+3
   817  000E10  C034  F04B         	movff	??_Hi+16,btemp+2
   818  000E14  C033  F04A         	movff	??_Hi+15,btemp+1
   819  000E18  C032  F049         	movff	??_Hi+14,btemp
   820  000E1C  C031  FFF5         	movff	??_Hi+13,tablat
   821  000E20  C030  FFF8         	movff	??_Hi+12,tblptru
   822  000E24  C02F  FFF7         	movff	??_Hi+11,tblptrh
   823  000E28  C02E  FFF6         	movff	??_Hi+10,tblptrl
   824  000E2C  C02D  FFF4         	movff	??_Hi+9,prodh
   825  000E30  C02C  FFF3         	movff	??_Hi+8,prodl
   826  000E34  C02B  FFDA         	movff	??_Hi+7,fsr2h
   827  000E38  C02A  FFD9         	movff	??_Hi+6,fsr2l
   828  000E3C  C029  FFE2         	movff	??_Hi+5,fsr1h
   829  000E40  C028  FFE1         	movff	??_Hi+4,fsr1l
   830  000E44  C027  FFEA         	movff	??_Hi+3,fsr0h
   831  000E48  C026  FFE9         	movff	??_Hi+2,fsr0l
   832  000E4C  C025  FFFB         	movff	??_Hi+1,pclatu
   833  000E50  C024  FFFA         	movff	??_Hi,pclath
   834  000E54  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   835  000E56  0011               	retfie		f
   836  000E58                     __end_of_Hi:
   837                           	opt stack 0
   838                           pclatu	equ	0xFFB
   839                           pclath	equ	0xFFA
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           prodh	equ	0xFF4
   845                           prodl	equ	0xFF3
   846                           intcon	equ	0xFF2
   847                           intcon2	equ	0xFF1
   848                           postinc0	equ	0xFEE
   849                           fsr0h	equ	0xFEA
   850                           fsr0l	equ	0xFE9
   851                           wreg	equ	0xFE8
   852                           fsr1h	equ	0xFE2
   853                           fsr1l	equ	0xFE1
   854                           fsr2h	equ	0xFDA
   855                           fsr2l	equ	0xFD9
   856                           status	equ	0xFD8
   857                           
   858 ;; *************** function _rgbstart *****************
   859 ;; Defined at:
   860 ;;		line 212 in file "positive.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   874 ;;      Params:         0       0       0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0       0       0
   876 ;;      Temps:          1       0       0       0       0       0       0
   877 ;;      Totals:         1       0       0       0       0       0       0
   878 ;;Total ram usage:        1 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    2
   881 ;; This function calls:
   882 ;;		_rgbshow
   883 ;;		_zerorgb
   884 ;; This function is called by:
   885 ;;		_Hi
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text5
   890  000012                     __ptext5:
   891                           	opt stack 0
   892  000012                     _rgbstart:
   893                           	opt stack 25
   894                           
   895                           ;positive.c: 214: while( red <= 70 ){
   896                           
   897                           ;incstack = 0
   898  000012  D042               	goto	i2l118
   899  000014                     
   900                           ;positive.c: 215: red=red+10;
   901  000014  0E0A               	movlw	10
   902  000016  2447               	addwf	_red,w,c
   903  000018  6E47               	movwf	_red,c
   904  00001A  0E00               	movlw	0
   905  00001C  2048               	addwfc	_red+1,w,c
   906  00001E  6E48               	movwf	_red+1,c
   907                           
   908                           ;positive.c: 216: rgbshow(red,green,blue,red2,green2,blue2,0);
   909  000020  C047  F013         	movff	_red,rgbshow@rval
   910  000024  C048  F014         	movff	_red+1,rgbshow@rval+1
   911  000028  C045  F015         	movff	_green,rgbshow@gval
   912  00002C  C046  F016         	movff	_green+1,rgbshow@gval+1
   913  000030  C043  F017         	movff	_blue,rgbshow@bval
   914  000034  C044  F018         	movff	_blue+1,rgbshow@bval+1
   915  000038  C041  F019         	movff	_red2,rgbshow@rval2
   916  00003C  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
   917  000040  C03F  F01B         	movff	_green2,rgbshow@gval2
   918  000044  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
   919  000048  C03D  F01D         	movff	_blue2,rgbshow@bval2
   920  00004C  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
   921  000050  0E00               	movlw	0
   922  000052  6E20               	movwf	rgbshow@flag+1,c
   923  000054  0E00               	movlw	0
   924  000056  6E1F               	movwf	rgbshow@flag,c
   925  000058  EC2C  F007         	call	_rgbshow	;wreg free
   926                           
   927                           ;positive.c: 218: rgbshow(red,green,blue,red2,green2,blue2,1);
   928  00005C  C047  F013         	movff	_red,rgbshow@rval
   929  000060  C048  F014         	movff	_red+1,rgbshow@rval+1
   930  000064  C045  F015         	movff	_green,rgbshow@gval
   931  000068  C046  F016         	movff	_green+1,rgbshow@gval+1
   932  00006C  C043  F017         	movff	_blue,rgbshow@bval
   933  000070  C044  F018         	movff	_blue+1,rgbshow@bval+1
   934  000074  C041  F019         	movff	_red2,rgbshow@rval2
   935  000078  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
   936  00007C  C03F  F01B         	movff	_green2,rgbshow@gval2
   937  000080  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
   938  000084  C03D  F01D         	movff	_blue2,rgbshow@bval2
   939  000088  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
   940  00008C  0E00               	movlw	0
   941  00008E  6E20               	movwf	rgbshow@flag+1,c
   942  000090  0E01               	movlw	1
   943  000092  6E1F               	movwf	rgbshow@flag,c
   944  000094  EC2C  F007         	call	_rgbshow	;wreg free
   945  000098                     i2l118:
   946  000098  BE48               	btfsc	_red+1,7,c
   947  00009A  D7BC               	goto	i2l119
   948  00009C  5048               	movf	_red+1,w,c
   949  00009E  E14D               	bnz	i2l121
   950  0000A0  0E47               	movlw	71
   951  0000A2  5C47               	subwf	_red,w,c
   952  0000A4  B0D8               	btfsc	status,0,c
   953  0000A6  D049               	goto	i2l121
   954  0000A8  D7B5               	goto	i2l119
   955  0000AA                     
   956                           ;positive.c: 223: red=red+10;
   957  0000AA  0E0A               	movlw	10
   958  0000AC  2447               	addwf	_red,w,c
   959  0000AE  6E47               	movwf	_red,c
   960  0000B0  0E00               	movlw	0
   961  0000B2  2048               	addwfc	_red+1,w,c
   962  0000B4  6E48               	movwf	_red+1,c
   963                           
   964                           ;positive.c: 224: red2=red2+10;
   965  0000B6  0E0A               	movlw	10
   966  0000B8  2441               	addwf	_red2,w,c
   967  0000BA  6E41               	movwf	_red2,c
   968  0000BC  0E00               	movlw	0
   969  0000BE  2042               	addwfc	_red2+1,w,c
   970  0000C0  6E42               	movwf	_red2+1,c
   971                           
   972                           ;positive.c: 225: rgbshow(red,green,blue,red2,green2,blue2,4);
   973  0000C2  C047  F013         	movff	_red,rgbshow@rval
   974  0000C6  C048  F014         	movff	_red+1,rgbshow@rval+1
   975  0000CA  C045  F015         	movff	_green,rgbshow@gval
   976  0000CE  C046  F016         	movff	_green+1,rgbshow@gval+1
   977  0000D2  C043  F017         	movff	_blue,rgbshow@bval
   978  0000D6  C044  F018         	movff	_blue+1,rgbshow@bval+1
   979  0000DA  C041  F019         	movff	_red2,rgbshow@rval2
   980  0000DE  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
   981  0000E2  C03F  F01B         	movff	_green2,rgbshow@gval2
   982  0000E6  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
   983  0000EA  C03D  F01D         	movff	_blue2,rgbshow@bval2
   984  0000EE  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
   985  0000F2  0E00               	movlw	0
   986  0000F4  6E20               	movwf	rgbshow@flag+1,c
   987  0000F6  0E04               	movlw	4
   988  0000F8  6E1F               	movwf	rgbshow@flag,c
   989  0000FA  EC2C  F007         	call	_rgbshow	;wreg free
   990                           
   991                           ;positive.c: 227: rgbshow(red,green,blue,red2,green2,blue2,5);
   992  0000FE  C047  F013         	movff	_red,rgbshow@rval
   993  000102  C048  F014         	movff	_red+1,rgbshow@rval+1
   994  000106  C045  F015         	movff	_green,rgbshow@gval
   995  00010A  C046  F016         	movff	_green+1,rgbshow@gval+1
   996  00010E  C043  F017         	movff	_blue,rgbshow@bval
   997  000112  C044  F018         	movff	_blue+1,rgbshow@bval+1
   998  000116  C041  F019         	movff	_red2,rgbshow@rval2
   999  00011A  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1000  00011E  C03F  F01B         	movff	_green2,rgbshow@gval2
  1001  000122  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1002  000126  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1003  00012A  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1004  00012E  0E00               	movlw	0
  1005  000130  6E20               	movwf	rgbshow@flag+1,c
  1006  000132  0E05               	movlw	5
  1007  000134  6E1F               	movwf	rgbshow@flag,c
  1008  000136  EC2C  F007         	call	_rgbshow	;wreg free
  1009  00013A                     i2l121:
  1010  00013A  BE48               	btfsc	_red+1,7,c
  1011  00013C  D7B6               	goto	i2l122
  1012  00013E  5048               	movf	_red+1,w,c
  1013  000140  E104               	bnz	i2u121_40
  1014  000142  0E8D               	movlw	141
  1015  000144  5C47               	subwf	_red,w,c
  1016  000146  A0D8               	btfss	status,0,c
  1017  000148  D7B0               	goto	i2l122
  1018  00014A                     i2u121_40:
  1019                           
  1020                           ;positive.c: 229: }
  1021                           ;positive.c: 230: LATBbits.LATB4=1;
  1022  00014A  888A               	bsf	3978,4,c	;volatile
  1023                           
  1024                           ;positive.c: 231: _delay((unsigned long)((1)*(8000000/4000.0)));
  1025  00014C  0E03               	movlw	3
  1026  00014E  6E23               	movwf	??_rgbstart& (0+255),c
  1027  000150  0E98               	movlw	152
  1028  000152                     i2u151_47:
  1029  000152  2EE8               	decfsz	wreg,f,c
  1030  000154  D7FE               	bra	i2u151_47
  1031  000156  2E23               	decfsz	??_rgbstart& (0+255),f,c
  1032  000158  D7FC               	bra	i2u151_47
  1033                           
  1034                           ;positive.c: 232: LATBbits.LATB4=0;
  1035  00015A  988A               	bcf	3978,4,c	;volatile
  1036                           
  1037                           ;positive.c: 233: _delay((unsigned long)((1)*(8000000/4000.0)));
  1038  00015C  0E03               	movlw	3
  1039  00015E  6E23               	movwf	??_rgbstart& (0+255),c
  1040  000160  0E98               	movlw	152
  1041  000162                     i2u152_47:
  1042  000162  2EE8               	decfsz	wreg,f,c
  1043  000164  D7FE               	bra	i2u152_47
  1044  000166  2E23               	decfsz	??_rgbstart& (0+255),f,c
  1045  000168  D7FC               	bra	i2u152_47
  1046                           
  1047                           ;positive.c: 235: while( green <= 70 ){
  1048  00016A  D048               	goto	i2l124
  1049  00016C                     
  1050                           ;positive.c: 236: green=green+10;
  1051  00016C  0E0A               	movlw	10
  1052  00016E  2445               	addwf	_green,w,c
  1053  000170  6E45               	movwf	_green,c
  1054  000172  0E00               	movlw	0
  1055  000174  2046               	addwfc	_green+1,w,c
  1056  000176  6E46               	movwf	_green+1,c
  1057                           
  1058                           ;positive.c: 237: red2=red2+10;
  1059  000178  0E0A               	movlw	10
  1060  00017A  2441               	addwf	_red2,w,c
  1061  00017C  6E41               	movwf	_red2,c
  1062  00017E  0E00               	movlw	0
  1063  000180  2042               	addwfc	_red2+1,w,c
  1064  000182  6E42               	movwf	_red2+1,c
  1065                           
  1066                           ;positive.c: 238: rgbshow(red,green,blue,red2,green2,blue2,4);
  1067  000184  C047  F013         	movff	_red,rgbshow@rval
  1068  000188  C048  F014         	movff	_red+1,rgbshow@rval+1
  1069  00018C  C045  F015         	movff	_green,rgbshow@gval
  1070  000190  C046  F016         	movff	_green+1,rgbshow@gval+1
  1071  000194  C043  F017         	movff	_blue,rgbshow@bval
  1072  000198  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1073  00019C  C041  F019         	movff	_red2,rgbshow@rval2
  1074  0001A0  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1075  0001A4  C03F  F01B         	movff	_green2,rgbshow@gval2
  1076  0001A8  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1077  0001AC  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1078  0001B0  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1079  0001B4  0E00               	movlw	0
  1080  0001B6  6E20               	movwf	rgbshow@flag+1,c
  1081  0001B8  0E04               	movlw	4
  1082  0001BA  6E1F               	movwf	rgbshow@flag,c
  1083  0001BC  EC2C  F007         	call	_rgbshow	;wreg free
  1084                           
  1085                           ;positive.c: 240: rgbshow(red,green,blue,red2,green2,blue2,5);
  1086  0001C0  C047  F013         	movff	_red,rgbshow@rval
  1087  0001C4  C048  F014         	movff	_red+1,rgbshow@rval+1
  1088  0001C8  C045  F015         	movff	_green,rgbshow@gval
  1089  0001CC  C046  F016         	movff	_green+1,rgbshow@gval+1
  1090  0001D0  C043  F017         	movff	_blue,rgbshow@bval
  1091  0001D4  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1092  0001D8  C041  F019         	movff	_red2,rgbshow@rval2
  1093  0001DC  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1094  0001E0  C03F  F01B         	movff	_green2,rgbshow@gval2
  1095  0001E4  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1096  0001E8  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1097  0001EC  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1098  0001F0  0E00               	movlw	0
  1099  0001F2  6E20               	movwf	rgbshow@flag+1,c
  1100  0001F4  0E05               	movlw	5
  1101  0001F6  6E1F               	movwf	rgbshow@flag,c
  1102  0001F8  EC2C  F007         	call	_rgbshow	;wreg free
  1103  0001FC                     i2l124:
  1104  0001FC  BE46               	btfsc	_green+1,7,c
  1105  0001FE  D7B6               	goto	i2l125
  1106  000200  5046               	movf	_green+1,w,c
  1107  000202  E14D               	bnz	i2l127
  1108  000204  0E47               	movlw	71
  1109  000206  5C45               	subwf	_green,w,c
  1110  000208  B0D8               	btfsc	status,0,c
  1111  00020A  D049               	goto	i2l127
  1112  00020C  D7AF               	goto	i2l125
  1113  00020E                     
  1114                           ;positive.c: 245: green=green+10;
  1115  00020E  0E0A               	movlw	10
  1116  000210  2445               	addwf	_green,w,c
  1117  000212  6E45               	movwf	_green,c
  1118  000214  0E00               	movlw	0
  1119  000216  2046               	addwfc	_green+1,w,c
  1120  000218  6E46               	movwf	_green+1,c
  1121                           
  1122                           ;positive.c: 246: green2=green2+10;
  1123  00021A  0E0A               	movlw	10
  1124  00021C  243F               	addwf	_green2,w,c
  1125  00021E  6E3F               	movwf	_green2,c
  1126  000220  0E00               	movlw	0
  1127  000222  2040               	addwfc	_green2+1,w,c
  1128  000224  6E40               	movwf	_green2+1,c
  1129                           
  1130                           ;positive.c: 247: rgbshow(red,green,blue,red2,green2,blue2,4);
  1131  000226  C047  F013         	movff	_red,rgbshow@rval
  1132  00022A  C048  F014         	movff	_red+1,rgbshow@rval+1
  1133  00022E  C045  F015         	movff	_green,rgbshow@gval
  1134  000232  C046  F016         	movff	_green+1,rgbshow@gval+1
  1135  000236  C043  F017         	movff	_blue,rgbshow@bval
  1136  00023A  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1137  00023E  C041  F019         	movff	_red2,rgbshow@rval2
  1138  000242  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1139  000246  C03F  F01B         	movff	_green2,rgbshow@gval2
  1140  00024A  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1141  00024E  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1142  000252  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1143  000256  0E00               	movlw	0
  1144  000258  6E20               	movwf	rgbshow@flag+1,c
  1145  00025A  0E04               	movlw	4
  1146  00025C  6E1F               	movwf	rgbshow@flag,c
  1147  00025E  EC2C  F007         	call	_rgbshow	;wreg free
  1148                           
  1149                           ;positive.c: 249: rgbshow(red,green,blue,red2,green2,blue2,5);
  1150  000262  C047  F013         	movff	_red,rgbshow@rval
  1151  000266  C048  F014         	movff	_red+1,rgbshow@rval+1
  1152  00026A  C045  F015         	movff	_green,rgbshow@gval
  1153  00026E  C046  F016         	movff	_green+1,rgbshow@gval+1
  1154  000272  C043  F017         	movff	_blue,rgbshow@bval
  1155  000276  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1156  00027A  C041  F019         	movff	_red2,rgbshow@rval2
  1157  00027E  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1158  000282  C03F  F01B         	movff	_green2,rgbshow@gval2
  1159  000286  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1160  00028A  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1161  00028E  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1162  000292  0E00               	movlw	0
  1163  000294  6E20               	movwf	rgbshow@flag+1,c
  1164  000296  0E05               	movlw	5
  1165  000298  6E1F               	movwf	rgbshow@flag,c
  1166  00029A  EC2C  F007         	call	_rgbshow	;wreg free
  1167  00029E                     i2l127:
  1168  00029E  BE46               	btfsc	_green+1,7,c
  1169  0002A0  D7B6               	goto	i2l128
  1170  0002A2  5046               	movf	_green+1,w,c
  1171  0002A4  E14D               	bnz	i2l130
  1172  0002A6  0E8D               	movlw	141
  1173  0002A8  5C45               	subwf	_green,w,c
  1174  0002AA  B0D8               	btfsc	status,0,c
  1175  0002AC  D049               	goto	i2l130
  1176  0002AE  D7AF               	goto	i2l128
  1177  0002B0                     i2l1463:
  1178                           
  1179                           ;positive.c: 253: red=red-10;
  1180  0002B0  0EF6               	movlw	246
  1181  0002B2  2447               	addwf	_red,w,c
  1182  0002B4  6E47               	movwf	_red,c
  1183  0002B6  0EFF               	movlw	255
  1184  0002B8  2048               	addwfc	_red+1,w,c
  1185  0002BA  6E48               	movwf	_red+1,c
  1186                           
  1187                           ;positive.c: 254: green2=green2+10;
  1188  0002BC  0E0A               	movlw	10
  1189  0002BE  243F               	addwf	_green2,w,c
  1190  0002C0  6E3F               	movwf	_green2,c
  1191  0002C2  0E00               	movlw	0
  1192  0002C4  2040               	addwfc	_green2+1,w,c
  1193  0002C6  6E40               	movwf	_green2+1,c
  1194                           
  1195                           ;positive.c: 255: rgbshow(red,green,blue,red2,green2,blue2,4);
  1196  0002C8  C047  F013         	movff	_red,rgbshow@rval
  1197  0002CC  C048  F014         	movff	_red+1,rgbshow@rval+1
  1198  0002D0  C045  F015         	movff	_green,rgbshow@gval
  1199  0002D4  C046  F016         	movff	_green+1,rgbshow@gval+1
  1200  0002D8  C043  F017         	movff	_blue,rgbshow@bval
  1201  0002DC  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1202  0002E0  C041  F019         	movff	_red2,rgbshow@rval2
  1203  0002E4  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1204  0002E8  C03F  F01B         	movff	_green2,rgbshow@gval2
  1205  0002EC  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1206  0002F0  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1207  0002F4  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1208  0002F8  0E00               	movlw	0
  1209  0002FA  6E20               	movwf	rgbshow@flag+1,c
  1210  0002FC  0E04               	movlw	4
  1211  0002FE  6E1F               	movwf	rgbshow@flag,c
  1212  000300  EC2C  F007         	call	_rgbshow	;wreg free
  1213                           
  1214                           ;positive.c: 257: rgbshow(red,green,blue,red2,green2,blue2,5);
  1215  000304  C047  F013         	movff	_red,rgbshow@rval
  1216  000308  C048  F014         	movff	_red+1,rgbshow@rval+1
  1217  00030C  C045  F015         	movff	_green,rgbshow@gval
  1218  000310  C046  F016         	movff	_green+1,rgbshow@gval+1
  1219  000314  C043  F017         	movff	_blue,rgbshow@bval
  1220  000318  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1221  00031C  C041  F019         	movff	_red2,rgbshow@rval2
  1222  000320  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1223  000324  C03F  F01B         	movff	_green2,rgbshow@gval2
  1224  000328  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1225  00032C  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1226  000330  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1227  000334  0E00               	movlw	0
  1228  000336  6E20               	movwf	rgbshow@flag+1,c
  1229  000338  0E05               	movlw	5
  1230  00033A  6E1F               	movwf	rgbshow@flag,c
  1231  00033C  EC2C  F007         	call	_rgbshow	;wreg free
  1232  000340                     i2l130:
  1233  000340  BE48               	btfsc	_red+1,7,c
  1234  000342  D04F               	goto	i2l133
  1235  000344  5048               	movf	_red+1,w,c
  1236  000346  E1B4               	bnz	i2l1463
  1237  000348  0E46               	movlw	70
  1238  00034A  5C47               	subwf	_red,w,c
  1239  00034C  A0D8               	btfss	status,0,c
  1240  00034E  D049               	goto	i2l133
  1241  000350  D7AF               	goto	i2l131
  1242  000352                     
  1243                           ;positive.c: 261: red=red-10;
  1244  000352  0EF6               	movlw	246
  1245  000354  2447               	addwf	_red,w,c
  1246  000356  6E47               	movwf	_red,c
  1247  000358  0EFF               	movlw	255
  1248  00035A  2048               	addwfc	_red+1,w,c
  1249  00035C  6E48               	movwf	_red+1,c
  1250                           
  1251                           ;positive.c: 262: red2=red2-10;
  1252  00035E  0EF6               	movlw	246
  1253  000360  2441               	addwf	_red2,w,c
  1254  000362  6E41               	movwf	_red2,c
  1255  000364  0EFF               	movlw	255
  1256  000366  2042               	addwfc	_red2+1,w,c
  1257  000368  6E42               	movwf	_red2+1,c
  1258                           
  1259                           ;positive.c: 263: rgbshow(red,green,blue,red2,green2,blue2,4);
  1260  00036A  C047  F013         	movff	_red,rgbshow@rval
  1261  00036E  C048  F014         	movff	_red+1,rgbshow@rval+1
  1262  000372  C045  F015         	movff	_green,rgbshow@gval
  1263  000376  C046  F016         	movff	_green+1,rgbshow@gval+1
  1264  00037A  C043  F017         	movff	_blue,rgbshow@bval
  1265  00037E  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1266  000382  C041  F019         	movff	_red2,rgbshow@rval2
  1267  000386  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1268  00038A  C03F  F01B         	movff	_green2,rgbshow@gval2
  1269  00038E  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1270  000392  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1271  000396  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1272  00039A  0E00               	movlw	0
  1273  00039C  6E20               	movwf	rgbshow@flag+1,c
  1274  00039E  0E04               	movlw	4
  1275  0003A0  6E1F               	movwf	rgbshow@flag,c
  1276  0003A2  EC2C  F007         	call	_rgbshow	;wreg free
  1277                           
  1278                           ;positive.c: 265: rgbshow(red,green,blue,red2,green2,blue2,5);
  1279  0003A6  C047  F013         	movff	_red,rgbshow@rval
  1280  0003AA  C048  F014         	movff	_red+1,rgbshow@rval+1
  1281  0003AE  C045  F015         	movff	_green,rgbshow@gval
  1282  0003B2  C046  F016         	movff	_green+1,rgbshow@gval+1
  1283  0003B6  C043  F017         	movff	_blue,rgbshow@bval
  1284  0003BA  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1285  0003BE  C041  F019         	movff	_red2,rgbshow@rval2
  1286  0003C2  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1287  0003C6  C03F  F01B         	movff	_green2,rgbshow@gval2
  1288  0003CA  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1289  0003CE  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1290  0003D2  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1291  0003D6  0E00               	movlw	0
  1292  0003D8  6E20               	movwf	rgbshow@flag+1,c
  1293  0003DA  0E05               	movlw	5
  1294  0003DC  6E1F               	movwf	rgbshow@flag,c
  1295  0003DE  EC2C  F007         	call	_rgbshow	;wreg free
  1296  0003E2                     i2l133:
  1297  0003E2  BE48               	btfsc	_red+1,7,c
  1298  0003E4  D049               	goto	i2l136
  1299  0003E6  D7B5               	goto	i2l134
  1300  0003E8                     
  1301                           ;positive.c: 270: blue=blue+10;
  1302  0003E8  0E0A               	movlw	10
  1303  0003EA  2443               	addwf	_blue,w,c
  1304  0003EC  6E43               	movwf	_blue,c
  1305  0003EE  0E00               	movlw	0
  1306  0003F0  2044               	addwfc	_blue+1,w,c
  1307  0003F2  6E44               	movwf	_blue+1,c
  1308                           
  1309                           ;positive.c: 271: red2=red2-10;
  1310  0003F4  0EF6               	movlw	246
  1311  0003F6  2441               	addwf	_red2,w,c
  1312  0003F8  6E41               	movwf	_red2,c
  1313  0003FA  0EFF               	movlw	255
  1314  0003FC  2042               	addwfc	_red2+1,w,c
  1315  0003FE  6E42               	movwf	_red2+1,c
  1316                           
  1317                           ;positive.c: 272: rgbshow(red,green,blue,red2,green2,blue2,4);
  1318  000400  C047  F013         	movff	_red,rgbshow@rval
  1319  000404  C048  F014         	movff	_red+1,rgbshow@rval+1
  1320  000408  C045  F015         	movff	_green,rgbshow@gval
  1321  00040C  C046  F016         	movff	_green+1,rgbshow@gval+1
  1322  000410  C043  F017         	movff	_blue,rgbshow@bval
  1323  000414  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1324  000418  C041  F019         	movff	_red2,rgbshow@rval2
  1325  00041C  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1326  000420  C03F  F01B         	movff	_green2,rgbshow@gval2
  1327  000424  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1328  000428  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1329  00042C  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1330  000430  0E00               	movlw	0
  1331  000432  6E20               	movwf	rgbshow@flag+1,c
  1332  000434  0E04               	movlw	4
  1333  000436  6E1F               	movwf	rgbshow@flag,c
  1334  000438  EC2C  F007         	call	_rgbshow	;wreg free
  1335                           
  1336                           ;positive.c: 274: rgbshow(red,green,blue,red2,green2,blue2,5);
  1337  00043C  C047  F013         	movff	_red,rgbshow@rval
  1338  000440  C048  F014         	movff	_red+1,rgbshow@rval+1
  1339  000444  C045  F015         	movff	_green,rgbshow@gval
  1340  000448  C046  F016         	movff	_green+1,rgbshow@gval+1
  1341  00044C  C043  F017         	movff	_blue,rgbshow@bval
  1342  000450  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1343  000454  C041  F019         	movff	_red2,rgbshow@rval2
  1344  000458  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1345  00045C  C03F  F01B         	movff	_green2,rgbshow@gval2
  1346  000460  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1347  000464  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1348  000468  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1349  00046C  0E00               	movlw	0
  1350  00046E  6E20               	movwf	rgbshow@flag+1,c
  1351  000470  0E05               	movlw	5
  1352  000472  6E1F               	movwf	rgbshow@flag,c
  1353  000474  EC2C  F007         	call	_rgbshow	;wreg free
  1354  000478                     i2l136:
  1355  000478  BE44               	btfsc	_blue+1,7,c
  1356  00047A  D7B6               	goto	i2l137
  1357  00047C  5044               	movf	_blue+1,w,c
  1358  00047E  E14D               	bnz	i2l139
  1359  000480  0E47               	movlw	71
  1360  000482  5C43               	subwf	_blue,w,c
  1361  000484  B0D8               	btfsc	status,0,c
  1362  000486  D049               	goto	i2l139
  1363  000488  D7AF               	goto	i2l137
  1364  00048A                     
  1365                           ;positive.c: 279: blue=blue+10;
  1366  00048A  0E0A               	movlw	10
  1367  00048C  2443               	addwf	_blue,w,c
  1368  00048E  6E43               	movwf	_blue,c
  1369  000490  0E00               	movlw	0
  1370  000492  2044               	addwfc	_blue+1,w,c
  1371  000494  6E44               	movwf	_blue+1,c
  1372                           
  1373                           ;positive.c: 280: blue2=blue2+10;
  1374  000496  0E0A               	movlw	10
  1375  000498  243D               	addwf	_blue2,w,c
  1376  00049A  6E3D               	movwf	_blue2,c
  1377  00049C  0E00               	movlw	0
  1378  00049E  203E               	addwfc	_blue2+1,w,c
  1379  0004A0  6E3E               	movwf	_blue2+1,c
  1380                           
  1381                           ;positive.c: 281: rgbshow(red,green,blue,red2,green2,blue2,4);
  1382  0004A2  C047  F013         	movff	_red,rgbshow@rval
  1383  0004A6  C048  F014         	movff	_red+1,rgbshow@rval+1
  1384  0004AA  C045  F015         	movff	_green,rgbshow@gval
  1385  0004AE  C046  F016         	movff	_green+1,rgbshow@gval+1
  1386  0004B2  C043  F017         	movff	_blue,rgbshow@bval
  1387  0004B6  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1388  0004BA  C041  F019         	movff	_red2,rgbshow@rval2
  1389  0004BE  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1390  0004C2  C03F  F01B         	movff	_green2,rgbshow@gval2
  1391  0004C6  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1392  0004CA  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1393  0004CE  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1394  0004D2  0E00               	movlw	0
  1395  0004D4  6E20               	movwf	rgbshow@flag+1,c
  1396  0004D6  0E04               	movlw	4
  1397  0004D8  6E1F               	movwf	rgbshow@flag,c
  1398  0004DA  EC2C  F007         	call	_rgbshow	;wreg free
  1399                           
  1400                           ;positive.c: 283: rgbshow(red,green,blue,red2,green2,blue2,5);
  1401  0004DE  C047  F013         	movff	_red,rgbshow@rval
  1402  0004E2  C048  F014         	movff	_red+1,rgbshow@rval+1
  1403  0004E6  C045  F015         	movff	_green,rgbshow@gval
  1404  0004EA  C046  F016         	movff	_green+1,rgbshow@gval+1
  1405  0004EE  C043  F017         	movff	_blue,rgbshow@bval
  1406  0004F2  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1407  0004F6  C041  F019         	movff	_red2,rgbshow@rval2
  1408  0004FA  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1409  0004FE  C03F  F01B         	movff	_green2,rgbshow@gval2
  1410  000502  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1411  000506  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1412  00050A  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1413  00050E  0E00               	movlw	0
  1414  000510  6E20               	movwf	rgbshow@flag+1,c
  1415  000512  0E05               	movlw	5
  1416  000514  6E1F               	movwf	rgbshow@flag,c
  1417  000516  EC2C  F007         	call	_rgbshow	;wreg free
  1418  00051A                     i2l139:
  1419  00051A  BE44               	btfsc	_blue+1,7,c
  1420  00051C  D7B6               	goto	i2l140
  1421  00051E  5044               	movf	_blue+1,w,c
  1422  000520  E14D               	bnz	i2l142
  1423  000522  0E8D               	movlw	141
  1424  000524  5C43               	subwf	_blue,w,c
  1425  000526  B0D8               	btfsc	status,0,c
  1426  000528  D049               	goto	i2l142
  1427  00052A  D7AF               	goto	i2l140
  1428  00052C                     
  1429                           ;positive.c: 288: red=red+10;
  1430  00052C  0E0A               	movlw	10
  1431  00052E  2447               	addwf	_red,w,c
  1432  000530  6E47               	movwf	_red,c
  1433  000532  0E00               	movlw	0
  1434  000534  2048               	addwfc	_red+1,w,c
  1435  000536  6E48               	movwf	_red+1,c
  1436                           
  1437                           ;positive.c: 289: blue2=blue2+10;
  1438  000538  0E0A               	movlw	10
  1439  00053A  243D               	addwf	_blue2,w,c
  1440  00053C  6E3D               	movwf	_blue2,c
  1441  00053E  0E00               	movlw	0
  1442  000540  203E               	addwfc	_blue2+1,w,c
  1443  000542  6E3E               	movwf	_blue2+1,c
  1444                           
  1445                           ;positive.c: 290: rgbshow(red,green,blue,red2,green2,blue2,4);
  1446  000544  C047  F013         	movff	_red,rgbshow@rval
  1447  000548  C048  F014         	movff	_red+1,rgbshow@rval+1
  1448  00054C  C045  F015         	movff	_green,rgbshow@gval
  1449  000550  C046  F016         	movff	_green+1,rgbshow@gval+1
  1450  000554  C043  F017         	movff	_blue,rgbshow@bval
  1451  000558  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1452  00055C  C041  F019         	movff	_red2,rgbshow@rval2
  1453  000560  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1454  000564  C03F  F01B         	movff	_green2,rgbshow@gval2
  1455  000568  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1456  00056C  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1457  000570  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1458  000574  0E00               	movlw	0
  1459  000576  6E20               	movwf	rgbshow@flag+1,c
  1460  000578  0E04               	movlw	4
  1461  00057A  6E1F               	movwf	rgbshow@flag,c
  1462  00057C  EC2C  F007         	call	_rgbshow	;wreg free
  1463                           
  1464                           ;positive.c: 292: rgbshow(red,green,blue,red2,green2,blue2,5);
  1465  000580  C047  F013         	movff	_red,rgbshow@rval
  1466  000584  C048  F014         	movff	_red+1,rgbshow@rval+1
  1467  000588  C045  F015         	movff	_green,rgbshow@gval
  1468  00058C  C046  F016         	movff	_green+1,rgbshow@gval+1
  1469  000590  C043  F017         	movff	_blue,rgbshow@bval
  1470  000594  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1471  000598  C041  F019         	movff	_red2,rgbshow@rval2
  1472  00059C  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1473  0005A0  C03F  F01B         	movff	_green2,rgbshow@gval2
  1474  0005A4  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1475  0005A8  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1476  0005AC  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1477  0005B0  0E00               	movlw	0
  1478  0005B2  6E20               	movwf	rgbshow@flag+1,c
  1479  0005B4  0E05               	movlw	5
  1480  0005B6  6E1F               	movwf	rgbshow@flag,c
  1481  0005B8  EC2C  F007         	call	_rgbshow	;wreg free
  1482  0005BC                     i2l142:
  1483  0005BC  BE48               	btfsc	_red+1,7,c
  1484  0005BE  D7B6               	goto	i2l143
  1485  0005C0  5048               	movf	_red+1,w,c
  1486  0005C2  E14D               	bnz	i2l145
  1487  0005C4  0E47               	movlw	71
  1488  0005C6  5C47               	subwf	_red,w,c
  1489  0005C8  B0D8               	btfsc	status,0,c
  1490  0005CA  D049               	goto	i2l145
  1491  0005CC  D7AF               	goto	i2l143
  1492  0005CE                     
  1493                           ;positive.c: 296: red=red+10;
  1494  0005CE  0E0A               	movlw	10
  1495  0005D0  2447               	addwf	_red,w,c
  1496  0005D2  6E47               	movwf	_red,c
  1497  0005D4  0E00               	movlw	0
  1498  0005D6  2048               	addwfc	_red+1,w,c
  1499  0005D8  6E48               	movwf	_red+1,c
  1500                           
  1501                           ;positive.c: 297: red2=red2+10;
  1502  0005DA  0E0A               	movlw	10
  1503  0005DC  2441               	addwf	_red2,w,c
  1504  0005DE  6E41               	movwf	_red2,c
  1505  0005E0  0E00               	movlw	0
  1506  0005E2  2042               	addwfc	_red2+1,w,c
  1507  0005E4  6E42               	movwf	_red2+1,c
  1508                           
  1509                           ;positive.c: 298: rgbshow(red,green,blue,red2,green2,blue2,4);
  1510  0005E6  C047  F013         	movff	_red,rgbshow@rval
  1511  0005EA  C048  F014         	movff	_red+1,rgbshow@rval+1
  1512  0005EE  C045  F015         	movff	_green,rgbshow@gval
  1513  0005F2  C046  F016         	movff	_green+1,rgbshow@gval+1
  1514  0005F6  C043  F017         	movff	_blue,rgbshow@bval
  1515  0005FA  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1516  0005FE  C041  F019         	movff	_red2,rgbshow@rval2
  1517  000602  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1518  000606  C03F  F01B         	movff	_green2,rgbshow@gval2
  1519  00060A  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1520  00060E  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1521  000612  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1522  000616  0E00               	movlw	0
  1523  000618  6E20               	movwf	rgbshow@flag+1,c
  1524  00061A  0E04               	movlw	4
  1525  00061C  6E1F               	movwf	rgbshow@flag,c
  1526  00061E  EC2C  F007         	call	_rgbshow	;wreg free
  1527                           
  1528                           ;positive.c: 300: rgbshow(red,green,blue,red2,green2,blue2,5);
  1529  000622  C047  F013         	movff	_red,rgbshow@rval
  1530  000626  C048  F014         	movff	_red+1,rgbshow@rval+1
  1531  00062A  C045  F015         	movff	_green,rgbshow@gval
  1532  00062E  C046  F016         	movff	_green+1,rgbshow@gval+1
  1533  000632  C043  F017         	movff	_blue,rgbshow@bval
  1534  000636  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1535  00063A  C041  F019         	movff	_red2,rgbshow@rval2
  1536  00063E  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1537  000642  C03F  F01B         	movff	_green2,rgbshow@gval2
  1538  000646  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1539  00064A  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1540  00064E  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1541  000652  0E00               	movlw	0
  1542  000654  6E20               	movwf	rgbshow@flag+1,c
  1543  000656  0E05               	movlw	5
  1544  000658  6E1F               	movwf	rgbshow@flag,c
  1545  00065A  EC2C  F007         	call	_rgbshow	;wreg free
  1546  00065E                     i2l145:
  1547  00065E  BE48               	btfsc	_red+1,7,c
  1548  000660  D7B6               	goto	i2l146
  1549  000662  5048               	movf	_red+1,w,c
  1550  000664  E14D               	bnz	i2l148
  1551  000666  0E8D               	movlw	141
  1552  000668  5C47               	subwf	_red,w,c
  1553  00066A  B0D8               	btfsc	status,0,c
  1554  00066C  D049               	goto	i2l148
  1555  00066E  D7AF               	goto	i2l146
  1556  000670                     i2l1499:
  1557                           
  1558                           ;positive.c: 304: green=green-10;
  1559  000670  0EF6               	movlw	246
  1560  000672  2445               	addwf	_green,w,c
  1561  000674  6E45               	movwf	_green,c
  1562  000676  0EFF               	movlw	255
  1563  000678  2046               	addwfc	_green+1,w,c
  1564  00067A  6E46               	movwf	_green+1,c
  1565                           
  1566                           ;positive.c: 305: red2=red2+10;
  1567  00067C  0E0A               	movlw	10
  1568  00067E  2441               	addwf	_red2,w,c
  1569  000680  6E41               	movwf	_red2,c
  1570  000682  0E00               	movlw	0
  1571  000684  2042               	addwfc	_red2+1,w,c
  1572  000686  6E42               	movwf	_red2+1,c
  1573                           
  1574                           ;positive.c: 306: rgbshow(red,green,blue,red2,green2,blue2,4);
  1575  000688  C047  F013         	movff	_red,rgbshow@rval
  1576  00068C  C048  F014         	movff	_red+1,rgbshow@rval+1
  1577  000690  C045  F015         	movff	_green,rgbshow@gval
  1578  000694  C046  F016         	movff	_green+1,rgbshow@gval+1
  1579  000698  C043  F017         	movff	_blue,rgbshow@bval
  1580  00069C  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1581  0006A0  C041  F019         	movff	_red2,rgbshow@rval2
  1582  0006A4  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1583  0006A8  C03F  F01B         	movff	_green2,rgbshow@gval2
  1584  0006AC  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1585  0006B0  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1586  0006B4  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1587  0006B8  0E00               	movlw	0
  1588  0006BA  6E20               	movwf	rgbshow@flag+1,c
  1589  0006BC  0E04               	movlw	4
  1590  0006BE  6E1F               	movwf	rgbshow@flag,c
  1591  0006C0  EC2C  F007         	call	_rgbshow	;wreg free
  1592                           
  1593                           ;positive.c: 308: rgbshow(red,green,blue,red2,green2,blue2,5);
  1594  0006C4  C047  F013         	movff	_red,rgbshow@rval
  1595  0006C8  C048  F014         	movff	_red+1,rgbshow@rval+1
  1596  0006CC  C045  F015         	movff	_green,rgbshow@gval
  1597  0006D0  C046  F016         	movff	_green+1,rgbshow@gval+1
  1598  0006D4  C043  F017         	movff	_blue,rgbshow@bval
  1599  0006D8  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1600  0006DC  C041  F019         	movff	_red2,rgbshow@rval2
  1601  0006E0  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1602  0006E4  C03F  F01B         	movff	_green2,rgbshow@gval2
  1603  0006E8  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1604  0006EC  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1605  0006F0  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1606  0006F4  0E00               	movlw	0
  1607  0006F6  6E20               	movwf	rgbshow@flag+1,c
  1608  0006F8  0E05               	movlw	5
  1609  0006FA  6E1F               	movwf	rgbshow@flag,c
  1610  0006FC  EC2C  F007         	call	_rgbshow	;wreg free
  1611  000700                     i2l148:
  1612  000700  BE46               	btfsc	_green+1,7,c
  1613  000702  D04F               	goto	i2l151
  1614  000704  5046               	movf	_green+1,w,c
  1615  000706  E1B4               	bnz	i2l1499
  1616  000708  0E46               	movlw	70
  1617  00070A  5C45               	subwf	_green,w,c
  1618  00070C  A0D8               	btfss	status,0,c
  1619  00070E  D049               	goto	i2l151
  1620  000710  D7AF               	goto	i2l149
  1621  000712                     
  1622                           ;positive.c: 312: green=green-10;
  1623  000712  0EF6               	movlw	246
  1624  000714  2445               	addwf	_green,w,c
  1625  000716  6E45               	movwf	_green,c
  1626  000718  0EFF               	movlw	255
  1627  00071A  2046               	addwfc	_green+1,w,c
  1628  00071C  6E46               	movwf	_green+1,c
  1629                           
  1630                           ;positive.c: 313: green2=green2-10;
  1631  00071E  0EF6               	movlw	246
  1632  000720  243F               	addwf	_green2,w,c
  1633  000722  6E3F               	movwf	_green2,c
  1634  000724  0EFF               	movlw	255
  1635  000726  2040               	addwfc	_green2+1,w,c
  1636  000728  6E40               	movwf	_green2+1,c
  1637                           
  1638                           ;positive.c: 314: rgbshow(red,green,blue,red2,green2,blue2,4);
  1639  00072A  C047  F013         	movff	_red,rgbshow@rval
  1640  00072E  C048  F014         	movff	_red+1,rgbshow@rval+1
  1641  000732  C045  F015         	movff	_green,rgbshow@gval
  1642  000736  C046  F016         	movff	_green+1,rgbshow@gval+1
  1643  00073A  C043  F017         	movff	_blue,rgbshow@bval
  1644  00073E  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1645  000742  C041  F019         	movff	_red2,rgbshow@rval2
  1646  000746  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1647  00074A  C03F  F01B         	movff	_green2,rgbshow@gval2
  1648  00074E  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1649  000752  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1650  000756  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1651  00075A  0E00               	movlw	0
  1652  00075C  6E20               	movwf	rgbshow@flag+1,c
  1653  00075E  0E04               	movlw	4
  1654  000760  6E1F               	movwf	rgbshow@flag,c
  1655  000762  EC2C  F007         	call	_rgbshow	;wreg free
  1656                           
  1657                           ;positive.c: 316: rgbshow(red,green,blue,red2,green2,blue2,5);
  1658  000766  C047  F013         	movff	_red,rgbshow@rval
  1659  00076A  C048  F014         	movff	_red+1,rgbshow@rval+1
  1660  00076E  C045  F015         	movff	_green,rgbshow@gval
  1661  000772  C046  F016         	movff	_green+1,rgbshow@gval+1
  1662  000776  C043  F017         	movff	_blue,rgbshow@bval
  1663  00077A  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1664  00077E  C041  F019         	movff	_red2,rgbshow@rval2
  1665  000782  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1666  000786  C03F  F01B         	movff	_green2,rgbshow@gval2
  1667  00078A  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1668  00078E  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1669  000792  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1670  000796  0E00               	movlw	0
  1671  000798  6E20               	movwf	rgbshow@flag+1,c
  1672  00079A  0E05               	movlw	5
  1673  00079C  6E1F               	movwf	rgbshow@flag,c
  1674  00079E  EC2C  F007         	call	_rgbshow	;wreg free
  1675  0007A2                     i2l151:
  1676  0007A2  BE46               	btfsc	_green+1,7,c
  1677  0007A4  D049               	goto	i2l154
  1678  0007A6  D7B5               	goto	i2l152
  1679  0007A8                     i2l1511:
  1680                           
  1681                           ;positive.c: 320: red=red-10;
  1682  0007A8  0EF6               	movlw	246
  1683  0007AA  2447               	addwf	_red,w,c
  1684  0007AC  6E47               	movwf	_red,c
  1685  0007AE  0EFF               	movlw	255
  1686  0007B0  2048               	addwfc	_red+1,w,c
  1687  0007B2  6E48               	movwf	_red+1,c
  1688                           
  1689                           ;positive.c: 321: green2=green2-10;
  1690  0007B4  0EF6               	movlw	246
  1691  0007B6  243F               	addwf	_green2,w,c
  1692  0007B8  6E3F               	movwf	_green2,c
  1693  0007BA  0EFF               	movlw	255
  1694  0007BC  2040               	addwfc	_green2+1,w,c
  1695  0007BE  6E40               	movwf	_green2+1,c
  1696                           
  1697                           ;positive.c: 322: rgbshow(red,green,blue,red2,green2,blue2,4);
  1698  0007C0  C047  F013         	movff	_red,rgbshow@rval
  1699  0007C4  C048  F014         	movff	_red+1,rgbshow@rval+1
  1700  0007C8  C045  F015         	movff	_green,rgbshow@gval
  1701  0007CC  C046  F016         	movff	_green+1,rgbshow@gval+1
  1702  0007D0  C043  F017         	movff	_blue,rgbshow@bval
  1703  0007D4  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1704  0007D8  C041  F019         	movff	_red2,rgbshow@rval2
  1705  0007DC  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1706  0007E0  C03F  F01B         	movff	_green2,rgbshow@gval2
  1707  0007E4  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1708  0007E8  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1709  0007EC  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1710  0007F0  0E00               	movlw	0
  1711  0007F2  6E20               	movwf	rgbshow@flag+1,c
  1712  0007F4  0E04               	movlw	4
  1713  0007F6  6E1F               	movwf	rgbshow@flag,c
  1714  0007F8  EC2C  F007         	call	_rgbshow	;wreg free
  1715                           
  1716                           ;positive.c: 324: rgbshow(red,green,blue,red2,green2,blue2,5);
  1717  0007FC  C047  F013         	movff	_red,rgbshow@rval
  1718  000800  C048  F014         	movff	_red+1,rgbshow@rval+1
  1719  000804  C045  F015         	movff	_green,rgbshow@gval
  1720  000808  C046  F016         	movff	_green+1,rgbshow@gval+1
  1721  00080C  C043  F017         	movff	_blue,rgbshow@bval
  1722  000810  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1723  000814  C041  F019         	movff	_red2,rgbshow@rval2
  1724  000818  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1725  00081C  C03F  F01B         	movff	_green2,rgbshow@gval2
  1726  000820  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1727  000824  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1728  000828  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1729  00082C  0E00               	movlw	0
  1730  00082E  6E20               	movwf	rgbshow@flag+1,c
  1731  000830  0E05               	movlw	5
  1732  000832  6E1F               	movwf	rgbshow@flag,c
  1733  000834  EC2C  F007         	call	_rgbshow	;wreg free
  1734  000838                     i2l154:
  1735  000838  BE48               	btfsc	_red+1,7,c
  1736  00083A  D04F               	goto	i2l157
  1737  00083C  5048               	movf	_red+1,w,c
  1738  00083E  E1B4               	bnz	i2l1511
  1739  000840  0E46               	movlw	70
  1740  000842  5C47               	subwf	_red,w,c
  1741  000844  A0D8               	btfss	status,0,c
  1742  000846  D049               	goto	i2l157
  1743  000848  D7AF               	goto	i2l155
  1744  00084A                     
  1745                           ;positive.c: 328: red=red-10;
  1746  00084A  0EF6               	movlw	246
  1747  00084C  2447               	addwf	_red,w,c
  1748  00084E  6E47               	movwf	_red,c
  1749  000850  0EFF               	movlw	255
  1750  000852  2048               	addwfc	_red+1,w,c
  1751  000854  6E48               	movwf	_red+1,c
  1752                           
  1753                           ;positive.c: 329: red2=red2-10;
  1754  000856  0EF6               	movlw	246
  1755  000858  2441               	addwf	_red2,w,c
  1756  00085A  6E41               	movwf	_red2,c
  1757  00085C  0EFF               	movlw	255
  1758  00085E  2042               	addwfc	_red2+1,w,c
  1759  000860  6E42               	movwf	_red2+1,c
  1760                           
  1761                           ;positive.c: 330: rgbshow(red,green,blue,red2,green2,blue2,4);
  1762  000862  C047  F013         	movff	_red,rgbshow@rval
  1763  000866  C048  F014         	movff	_red+1,rgbshow@rval+1
  1764  00086A  C045  F015         	movff	_green,rgbshow@gval
  1765  00086E  C046  F016         	movff	_green+1,rgbshow@gval+1
  1766  000872  C043  F017         	movff	_blue,rgbshow@bval
  1767  000876  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1768  00087A  C041  F019         	movff	_red2,rgbshow@rval2
  1769  00087E  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1770  000882  C03F  F01B         	movff	_green2,rgbshow@gval2
  1771  000886  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1772  00088A  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1773  00088E  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1774  000892  0E00               	movlw	0
  1775  000894  6E20               	movwf	rgbshow@flag+1,c
  1776  000896  0E04               	movlw	4
  1777  000898  6E1F               	movwf	rgbshow@flag,c
  1778  00089A  EC2C  F007         	call	_rgbshow	;wreg free
  1779                           
  1780                           ;positive.c: 332: rgbshow(red,green,blue,red2,green2,blue2,5);
  1781  00089E  C047  F013         	movff	_red,rgbshow@rval
  1782  0008A2  C048  F014         	movff	_red+1,rgbshow@rval+1
  1783  0008A6  C045  F015         	movff	_green,rgbshow@gval
  1784  0008AA  C046  F016         	movff	_green+1,rgbshow@gval+1
  1785  0008AE  C043  F017         	movff	_blue,rgbshow@bval
  1786  0008B2  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1787  0008B6  C041  F019         	movff	_red2,rgbshow@rval2
  1788  0008BA  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1789  0008BE  C03F  F01B         	movff	_green2,rgbshow@gval2
  1790  0008C2  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1791  0008C6  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1792  0008CA  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1793  0008CE  0E00               	movlw	0
  1794  0008D0  6E20               	movwf	rgbshow@flag+1,c
  1795  0008D2  0E05               	movlw	5
  1796  0008D4  6E1F               	movwf	rgbshow@flag,c
  1797  0008D6  EC2C  F007         	call	_rgbshow	;wreg free
  1798  0008DA                     i2l157:
  1799  0008DA  BE48               	btfsc	_red+1,7,c
  1800  0008DC  D049               	goto	i2l160
  1801  0008DE  D7B5               	goto	i2l158
  1802  0008E0                     i2l1523:
  1803                           
  1804                           ;positive.c: 336: blue=blue-10;
  1805  0008E0  0EF6               	movlw	246
  1806  0008E2  2443               	addwf	_blue,w,c
  1807  0008E4  6E43               	movwf	_blue,c
  1808  0008E6  0EFF               	movlw	255
  1809  0008E8  2044               	addwfc	_blue+1,w,c
  1810  0008EA  6E44               	movwf	_blue+1,c
  1811                           
  1812                           ;positive.c: 337: red2=red2-10;
  1813  0008EC  0EF6               	movlw	246
  1814  0008EE  2441               	addwf	_red2,w,c
  1815  0008F0  6E41               	movwf	_red2,c
  1816  0008F2  0EFF               	movlw	255
  1817  0008F4  2042               	addwfc	_red2+1,w,c
  1818  0008F6  6E42               	movwf	_red2+1,c
  1819                           
  1820                           ;positive.c: 338: rgbshow(red,green,blue,red2,green2,blue2,4);
  1821  0008F8  C047  F013         	movff	_red,rgbshow@rval
  1822  0008FC  C048  F014         	movff	_red+1,rgbshow@rval+1
  1823  000900  C045  F015         	movff	_green,rgbshow@gval
  1824  000904  C046  F016         	movff	_green+1,rgbshow@gval+1
  1825  000908  C043  F017         	movff	_blue,rgbshow@bval
  1826  00090C  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1827  000910  C041  F019         	movff	_red2,rgbshow@rval2
  1828  000914  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1829  000918  C03F  F01B         	movff	_green2,rgbshow@gval2
  1830  00091C  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1831  000920  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1832  000924  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1833  000928  0E00               	movlw	0
  1834  00092A  6E20               	movwf	rgbshow@flag+1,c
  1835  00092C  0E04               	movlw	4
  1836  00092E  6E1F               	movwf	rgbshow@flag,c
  1837  000930  EC2C  F007         	call	_rgbshow	;wreg free
  1838                           
  1839                           ;positive.c: 340: rgbshow(red,green,blue,red2,green2,blue2,5);
  1840  000934  C047  F013         	movff	_red,rgbshow@rval
  1841  000938  C048  F014         	movff	_red+1,rgbshow@rval+1
  1842  00093C  C045  F015         	movff	_green,rgbshow@gval
  1843  000940  C046  F016         	movff	_green+1,rgbshow@gval+1
  1844  000944  C043  F017         	movff	_blue,rgbshow@bval
  1845  000948  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1846  00094C  C041  F019         	movff	_red2,rgbshow@rval2
  1847  000950  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1848  000954  C03F  F01B         	movff	_green2,rgbshow@gval2
  1849  000958  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1850  00095C  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1851  000960  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1852  000964  0E00               	movlw	0
  1853  000966  6E20               	movwf	rgbshow@flag+1,c
  1854  000968  0E05               	movlw	5
  1855  00096A  6E1F               	movwf	rgbshow@flag,c
  1856  00096C  EC2C  F007         	call	_rgbshow	;wreg free
  1857  000970                     i2l160:
  1858  000970  BE44               	btfsc	_blue+1,7,c
  1859  000972  D04F               	goto	i2l163
  1860  000974  5044               	movf	_blue+1,w,c
  1861  000976  E1B4               	bnz	i2l1523
  1862  000978  0E46               	movlw	70
  1863  00097A  5C43               	subwf	_blue,w,c
  1864  00097C  A0D8               	btfss	status,0,c
  1865  00097E  D049               	goto	i2l163
  1866  000980  D7AF               	goto	i2l161
  1867  000982                     
  1868                           ;positive.c: 343: blue=blue-10;
  1869  000982  0EF6               	movlw	246
  1870  000984  2443               	addwf	_blue,w,c
  1871  000986  6E43               	movwf	_blue,c
  1872  000988  0EFF               	movlw	255
  1873  00098A  2044               	addwfc	_blue+1,w,c
  1874  00098C  6E44               	movwf	_blue+1,c
  1875                           
  1876                           ;positive.c: 344: blue2=blue2-10;
  1877  00098E  0EF6               	movlw	246
  1878  000990  243D               	addwf	_blue2,w,c
  1879  000992  6E3D               	movwf	_blue2,c
  1880  000994  0EFF               	movlw	255
  1881  000996  203E               	addwfc	_blue2+1,w,c
  1882  000998  6E3E               	movwf	_blue2+1,c
  1883                           
  1884                           ;positive.c: 345: rgbshow(red,green,blue,red2,green2,blue2,4);
  1885  00099A  C047  F013         	movff	_red,rgbshow@rval
  1886  00099E  C048  F014         	movff	_red+1,rgbshow@rval+1
  1887  0009A2  C045  F015         	movff	_green,rgbshow@gval
  1888  0009A6  C046  F016         	movff	_green+1,rgbshow@gval+1
  1889  0009AA  C043  F017         	movff	_blue,rgbshow@bval
  1890  0009AE  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1891  0009B2  C041  F019         	movff	_red2,rgbshow@rval2
  1892  0009B6  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1893  0009BA  C03F  F01B         	movff	_green2,rgbshow@gval2
  1894  0009BE  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1895  0009C2  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1896  0009C6  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1897  0009CA  0E00               	movlw	0
  1898  0009CC  6E20               	movwf	rgbshow@flag+1,c
  1899  0009CE  0E04               	movlw	4
  1900  0009D0  6E1F               	movwf	rgbshow@flag,c
  1901  0009D2  EC2C  F007         	call	_rgbshow	;wreg free
  1902                           
  1903                           ;positive.c: 347: rgbshow(red,green,blue,red2,green2,blue2,5);
  1904  0009D6  C047  F013         	movff	_red,rgbshow@rval
  1905  0009DA  C048  F014         	movff	_red+1,rgbshow@rval+1
  1906  0009DE  C045  F015         	movff	_green,rgbshow@gval
  1907  0009E2  C046  F016         	movff	_green+1,rgbshow@gval+1
  1908  0009E6  C043  F017         	movff	_blue,rgbshow@bval
  1909  0009EA  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1910  0009EE  C041  F019         	movff	_red2,rgbshow@rval2
  1911  0009F2  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1912  0009F6  C03F  F01B         	movff	_green2,rgbshow@gval2
  1913  0009FA  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1914  0009FE  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1915  000A02  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1916  000A06  0E00               	movlw	0
  1917  000A08  6E20               	movwf	rgbshow@flag+1,c
  1918  000A0A  0E05               	movlw	5
  1919  000A0C  6E1F               	movwf	rgbshow@flag,c
  1920  000A0E  EC2C  F007         	call	_rgbshow	;wreg free
  1921  000A12                     i2l163:
  1922  000A12  BE44               	btfsc	_blue+1,7,c
  1923  000A14  D049               	goto	i2l166
  1924  000A16  D7B5               	goto	i2l164
  1925  000A18                     i2l167:
  1926                           
  1927                           ;positive.c: 351: LATCbits.LATC0=1;
  1928  000A18  808B               	bsf	3979,0,c	;volatile
  1929                           
  1930                           ;positive.c: 352: LATCbits.LATC1=1;
  1931  000A1A  828B               	bsf	3979,1,c	;volatile
  1932                           
  1933                           ;positive.c: 353: LATCbits.LATC2=1;
  1934  000A1C  848B               	bsf	3979,2,c	;volatile
  1935                           
  1936                           ;positive.c: 354: LATCbits.LATC3=1;
  1937  000A1E  868B               	bsf	3979,3,c	;volatile
  1938                           
  1939                           ;positive.c: 355: LATDbits.LATD0=1;
  1940  000A20  808C               	bsf	3980,0,c	;volatile
  1941                           
  1942                           ;positive.c: 356: LATDbits.LATD1=1;
  1943  000A22  828C               	bsf	3980,1,c	;volatile
  1944                           
  1945                           ;positive.c: 357: blue2=blue2-10;
  1946  000A24  0EF6               	movlw	246
  1947  000A26  243D               	addwf	_blue2,w,c
  1948  000A28  6E3D               	movwf	_blue2,c
  1949  000A2A  0EFF               	movlw	255
  1950  000A2C  203E               	addwfc	_blue2+1,w,c
  1951  000A2E  6E3E               	movwf	_blue2+1,c
  1952                           
  1953                           ;positive.c: 358: rgbshow(red,green,blue,red2,green2,blue2,2);
  1954  000A30  C047  F013         	movff	_red,rgbshow@rval
  1955  000A34  C048  F014         	movff	_red+1,rgbshow@rval+1
  1956  000A38  C045  F015         	movff	_green,rgbshow@gval
  1957  000A3C  C046  F016         	movff	_green+1,rgbshow@gval+1
  1958  000A40  C043  F017         	movff	_blue,rgbshow@bval
  1959  000A44  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1960  000A48  C041  F019         	movff	_red2,rgbshow@rval2
  1961  000A4C  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1962  000A50  C03F  F01B         	movff	_green2,rgbshow@gval2
  1963  000A54  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1964  000A58  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1965  000A5C  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1966  000A60  0E00               	movlw	0
  1967  000A62  6E20               	movwf	rgbshow@flag+1,c
  1968  000A64  0E02               	movlw	2
  1969  000A66  6E1F               	movwf	rgbshow@flag,c
  1970  000A68  EC2C  F007         	call	_rgbshow	;wreg free
  1971                           
  1972                           ;positive.c: 360: rgbshow(red,green,blue,red2,green2,blue2,3);
  1973  000A6C  C047  F013         	movff	_red,rgbshow@rval
  1974  000A70  C048  F014         	movff	_red+1,rgbshow@rval+1
  1975  000A74  C045  F015         	movff	_green,rgbshow@gval
  1976  000A78  C046  F016         	movff	_green+1,rgbshow@gval+1
  1977  000A7C  C043  F017         	movff	_blue,rgbshow@bval
  1978  000A80  C044  F018         	movff	_blue+1,rgbshow@bval+1
  1979  000A84  C041  F019         	movff	_red2,rgbshow@rval2
  1980  000A88  C042  F01A         	movff	_red2+1,rgbshow@rval2+1
  1981  000A8C  C03F  F01B         	movff	_green2,rgbshow@gval2
  1982  000A90  C040  F01C         	movff	_green2+1,rgbshow@gval2+1
  1983  000A94  C03D  F01D         	movff	_blue2,rgbshow@bval2
  1984  000A98  C03E  F01E         	movff	_blue2+1,rgbshow@bval2+1
  1985  000A9C  0E00               	movlw	0
  1986  000A9E  6E20               	movwf	rgbshow@flag+1,c
  1987  000AA0  0E03               	movlw	3
  1988  000AA2  6E1F               	movwf	rgbshow@flag,c
  1989  000AA4  EC2C  F007         	call	_rgbshow	;wreg free
  1990  000AA8                     i2l166:
  1991  000AA8  AE3E               	btfss	_blue2+1,7,c
  1992  000AAA  D7B6               	goto	i2l167
  1993                           
  1994                           ;positive.c: 361: }
  1995                           ;positive.c: 362: zerorgb();
  1996  000AAC  ECD7  F007         	call	_zerorgb	;wreg free
  1997  000AB0  0012               	return		;funcret
  1998  000AB2                     __end_of_rgbstart:
  1999                           	opt stack 0
  2000                           pclatu	equ	0xFFB
  2001                           pclath	equ	0xFFA
  2002                           tblptru	equ	0xFF8
  2003                           tblptrh	equ	0xFF7
  2004                           tblptrl	equ	0xFF6
  2005                           tablat	equ	0xFF5
  2006                           prodh	equ	0xFF4
  2007                           prodl	equ	0xFF3
  2008                           intcon	equ	0xFF2
  2009                           intcon2	equ	0xFF1
  2010                           postinc0	equ	0xFEE
  2011                           fsr0h	equ	0xFEA
  2012                           fsr0l	equ	0xFE9
  2013                           wreg	equ	0xFE8
  2014                           fsr1h	equ	0xFE2
  2015                           fsr1l	equ	0xFE1
  2016                           fsr2h	equ	0xFDA
  2017                           fsr2l	equ	0xFD9
  2018                           status	equ	0xFD8
  2019                           
  2020 ;; *************** function _zerorgb *****************
  2021 ;; Defined at:
  2022 ;;		line 192 in file "positive.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2036 ;;      Params:         0       0       0       0       0       0       0
  2037 ;;      Locals:         0       0       0       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0
  2039 ;;      Totals:         0       0       0       0       0       0       0
  2040 ;;Total ram usage:        0 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_rgbstart
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text6
  2050  000FAE                     __ptext6:
  2051                           	opt stack 0
  2052  000FAE                     _zerorgb:
  2053                           	opt stack 26
  2054                           
  2055                           ;positive.c: 193: LATCbits.LATC0=1;
  2056                           
  2057                           ;incstack = 0
  2058  000FAE  808B               	bsf	3979,0,c	;volatile
  2059                           
  2060                           ;positive.c: 194: LATCbits.LATC1=1;
  2061  000FB0  828B               	bsf	3979,1,c	;volatile
  2062                           
  2063                           ;positive.c: 195: LATCbits.LATC2=1;
  2064  000FB2  848B               	bsf	3979,2,c	;volatile
  2065                           
  2066                           ;positive.c: 196: LATCbits.LATC3=1;
  2067  000FB4  868B               	bsf	3979,3,c	;volatile
  2068                           
  2069                           ;positive.c: 197: LATDbits.LATD0=1;
  2070  000FB6  808C               	bsf	3980,0,c	;volatile
  2071                           
  2072                           ;positive.c: 198: LATDbits.LATD1=1;
  2073  000FB8  828C               	bsf	3980,1,c	;volatile
  2074                           
  2075                           ;positive.c: 199: LATCbits.LATC7=1;
  2076  000FBA  8E8B               	bsf	3979,7,c	;volatile
  2077                           
  2078                           ;positive.c: 200: LATCbits.LATC6=1;
  2079  000FBC  8C8B               	bsf	3979,6,c	;volatile
  2080                           
  2081                           ;positive.c: 201: LATCbits.LATC5=1;
  2082  000FBE  8A8B               	bsf	3979,5,c	;volatile
  2083                           
  2084                           ;positive.c: 202: LATCbits.LATC4=1;
  2085  000FC0  888B               	bsf	3979,4,c	;volatile
  2086                           
  2087                           ;positive.c: 203: LATDbits.LATD3=1;
  2088  000FC2  868C               	bsf	3980,3,c	;volatile
  2089                           
  2090                           ;positive.c: 204: LATDbits.LATD2=1;
  2091  000FC4  848C               	bsf	3980,2,c	;volatile
  2092                           
  2093                           ;positive.c: 205: red=0;
  2094  000FC6  0E00               	movlw	0
  2095  000FC8  6E48               	movwf	_red+1,c
  2096  000FCA  0E00               	movlw	0
  2097  000FCC  6E47               	movwf	_red,c
  2098                           
  2099                           ;positive.c: 206: green=0;
  2100  000FCE  0E00               	movlw	0
  2101  000FD0  6E46               	movwf	_green+1,c
  2102  000FD2  0E00               	movlw	0
  2103  000FD4  6E45               	movwf	_green,c
  2104                           
  2105                           ;positive.c: 207: blue=0;
  2106  000FD6  0E00               	movlw	0
  2107  000FD8  6E44               	movwf	_blue+1,c
  2108  000FDA  0E00               	movlw	0
  2109  000FDC  6E43               	movwf	_blue,c
  2110                           
  2111                           ;positive.c: 208: red2=0;
  2112  000FDE  0E00               	movlw	0
  2113  000FE0  6E42               	movwf	_red2+1,c
  2114  000FE2  0E00               	movlw	0
  2115  000FE4  6E41               	movwf	_red2,c
  2116                           
  2117                           ;positive.c: 209: green2=0;
  2118  000FE6  0E00               	movlw	0
  2119  000FE8  6E40               	movwf	_green2+1,c
  2120  000FEA  0E00               	movlw	0
  2121  000FEC  6E3F               	movwf	_green2,c
  2122                           
  2123                           ;positive.c: 210: blue2=0;
  2124  000FEE  0E00               	movlw	0
  2125  000FF0  6E3E               	movwf	_blue2+1,c
  2126  000FF2  0E00               	movlw	0
  2127  000FF4  6E3D               	movwf	_blue2,c
  2128  000FF6  0012               	return		;funcret
  2129  000FF8                     __end_of_zerorgb:
  2130                           	opt stack 0
  2131                           pclatu	equ	0xFFB
  2132                           pclath	equ	0xFFA
  2133                           tblptru	equ	0xFF8
  2134                           tblptrh	equ	0xFF7
  2135                           tblptrl	equ	0xFF6
  2136                           tablat	equ	0xFF5
  2137                           prodh	equ	0xFF4
  2138                           prodl	equ	0xFF3
  2139                           intcon	equ	0xFF2
  2140                           intcon2	equ	0xFF1
  2141                           postinc0	equ	0xFEE
  2142                           fsr0h	equ	0xFEA
  2143                           fsr0l	equ	0xFE9
  2144                           wreg	equ	0xFE8
  2145                           fsr1h	equ	0xFE2
  2146                           fsr1l	equ	0xFE1
  2147                           fsr2h	equ	0xFDA
  2148                           fsr2l	equ	0xFD9
  2149                           status	equ	0xFD8
  2150                           
  2151 ;; *************** function _rgbshow *****************
  2152 ;; Defined at:
  2153 ;;		line 177 in file "positive.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  rval            2   18[COMRAM] int 
  2156 ;;  gval            2   20[COMRAM] int 
  2157 ;;  bval            2   22[COMRAM] int 
  2158 ;;  rval2           2   24[COMRAM] int 
  2159 ;;  gval2           2   26[COMRAM] int 
  2160 ;;  bval2           2   28[COMRAM] int 
  2161 ;;  flag            2   30[COMRAM] int 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  i               2   32[COMRAM] int 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2173 ;;      Params:        14       0       0       0       0       0       0
  2174 ;;      Locals:         2       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0
  2176 ;;      Totals:        16       0       0       0       0       0       0
  2177 ;;Total ram usage:       16 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    1
  2180 ;; This function calls:
  2181 ;;		_rgbshowone
  2182 ;;		_rgbshowsix
  2183 ;; This function is called by:
  2184 ;;		_rgbstart
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text7
  2189  000E58                     __ptext7:
  2190                           	opt stack 0
  2191  000E58                     _rgbshow:
  2192                           	opt stack 25
  2193                           
  2194                           ;positive.c: 179: int i=60;
  2195                           
  2196                           ;incstack = 0
  2197  000E58  0E00               	movlw	0
  2198  000E5A  6E22               	movwf	rgbshow@i+1,c
  2199  000E5C  0E3C               	movlw	60
  2200  000E5E  6E21               	movwf	rgbshow@i,c
  2201                           
  2202                           ;positive.c: 180: if(flag<4){
  2203  000E60  BE20               	btfsc	rgbshow@flag+1,7,c
  2204  000E62  D019               	goto	i2l105
  2205  000E64  5020               	movf	rgbshow@flag+1,w,c
  2206  000E66  E13E               	bnz	i2l1415
  2207  000E68  0E04               	movlw	4
  2208  000E6A  5C1F               	subwf	rgbshow@flag,w,c
  2209  000E6C  A0D8               	btfss	status,0,c
  2210  000E6E  D013               	goto	i2l105
  2211  000E70  D039               	goto	i2l109
  2212  000E72                     i2l1409:
  2213                           
  2214                           ;positive.c: 182: rgbshowone(rval,gval,bval,flag);
  2215  000E72  C013  F001         	movff	rgbshow@rval,rgbshowone@rval
  2216  000E76  C014  F002         	movff	rgbshow@rval+1,rgbshowone@rval+1
  2217  000E7A  C015  F003         	movff	rgbshow@gval,rgbshowone@gval
  2218  000E7E  C016  F004         	movff	rgbshow@gval+1,rgbshowone@gval+1
  2219  000E82  C017  F005         	movff	rgbshow@bval,rgbshowone@bval
  2220  000E86  C018  F006         	movff	rgbshow@bval+1,rgbshowone@bval+1
  2221  000E8A  C01F  F007         	movff	rgbshow@flag,rgbshowone@flag
  2222  000E8E  C020  F008         	movff	rgbshow@flag+1,rgbshowone@flag+1
  2223  000E92  EC59  F005         	call	_rgbshowone	;wreg free
  2224  000E96                     i2l105:
  2225  000E96  0621               	decf	rgbshow@i,f,c
  2226  000E98  A0D8               	btfss	status,0,c
  2227  000E9A  0622               	decf	rgbshow@i+1,f,c
  2228  000E9C  2821               	incf	rgbshow@i,w,c
  2229  000E9E  E1E9               	bnz	i2l1409
  2230  000EA0  2822               	incf	rgbshow@i+1,w,c
  2231  000EA2  B4D8               	btfsc	status,2,c
  2232  000EA4  0012               	return	
  2233  000EA6  D7E5               	goto	i2l106
  2234  000EA8                     i2l1413:
  2235                           
  2236                           ;positive.c: 187: rgbshowsix(rval,gval,bval,rval2,gval2,bval2,flag);
  2237  000EA8  C013  F001         	movff	rgbshow@rval,rgbshowsix@rval
  2238  000EAC  C014  F002         	movff	rgbshow@rval+1,rgbshowsix@rval+1
  2239  000EB0  C015  F003         	movff	rgbshow@gval,rgbshowsix@gval
  2240  000EB4  C016  F004         	movff	rgbshow@gval+1,rgbshowsix@gval+1
  2241  000EB8  C017  F005         	movff	rgbshow@bval,rgbshowsix@bval
  2242  000EBC  C018  F006         	movff	rgbshow@bval+1,rgbshowsix@bval+1
  2243  000EC0  C019  F007         	movff	rgbshow@rval2,rgbshowsix@rval2
  2244  000EC4  C01A  F008         	movff	rgbshow@rval2+1,rgbshowsix@rval2+1
  2245  000EC8  C01B  F009         	movff	rgbshow@gval2,rgbshowsix@gval2
  2246  000ECC  C01C  F00A         	movff	rgbshow@gval2+1,rgbshowsix@gval2+1
  2247  000ED0  C01D  F00B         	movff	rgbshow@bval2,rgbshowsix@bval2
  2248  000ED4  C01E  F00C         	movff	rgbshow@bval2+1,rgbshowsix@bval2+1
  2249  000ED8  C01F  F00D         	movff	rgbshow@flag,rgbshowsix@flag
  2250  000EDC  C020  F00E         	movff	rgbshow@flag+1,rgbshowsix@flag+1
  2251  000EE0  EC32  F006         	call	_rgbshowsix	;wreg free
  2252  000EE4                     i2l109:
  2253  000EE4                     i2l1415:
  2254  000EE4  0621               	decf	rgbshow@i,f,c
  2255  000EE6  A0D8               	btfss	status,0,c
  2256  000EE8  0622               	decf	rgbshow@i+1,f,c
  2257  000EEA  2821               	incf	rgbshow@i,w,c
  2258  000EEC  E1DD               	bnz	i2l1413
  2259  000EEE  2822               	incf	rgbshow@i+1,w,c
  2260  000EF0  B4D8               	btfsc	status,2,c
  2261  000EF2  0012               	return	
  2262  000EF4  D7D9               	goto	i2l110
  2263  000EF6                     __end_of_rgbshow:
  2264                           	opt stack 0
  2265                           pclatu	equ	0xFFB
  2266                           pclath	equ	0xFFA
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           prodh	equ	0xFF4
  2272                           prodl	equ	0xFF3
  2273                           intcon	equ	0xFF2
  2274                           intcon2	equ	0xFF1
  2275                           postinc0	equ	0xFEE
  2276                           fsr0h	equ	0xFEA
  2277                           fsr0l	equ	0xFE9
  2278                           wreg	equ	0xFE8
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           fsr2h	equ	0xFDA
  2282                           fsr2l	equ	0xFD9
  2283                           status	equ	0xFD8
  2284                           
  2285 ;; *************** function _rgbshowsix *****************
  2286 ;; Defined at:
  2287 ;;		line 127 in file "positive.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  rval            2    0[COMRAM] int 
  2290 ;;  gval            2    2[COMRAM] int 
  2291 ;;  bval            2    4[COMRAM] int 
  2292 ;;  rval2           2    6[COMRAM] int 
  2293 ;;  gval2           2    8[COMRAM] int 
  2294 ;;  bval2           2   10[COMRAM] int 
  2295 ;;  flag            2   12[COMRAM] int 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  i               2   16[COMRAM] int 
  2298 ;;  i               2   14[COMRAM] int 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2308 ;;      Params:        14       0       0       0       0       0       0
  2309 ;;      Locals:         4       0       0       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0       0       0
  2311 ;;      Totals:        18       0       0       0       0       0       0
  2312 ;;Total ram usage:       18 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_rgbshow
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text8
  2322  000C64                     __ptext8:
  2323                           	opt stack 0
  2324  000C64                     _rgbshowsix:
  2325                           	opt stack 25
  2326                           
  2327                           ;positive.c: 129: if(flag==4){
  2328                           
  2329                           ;incstack = 0
  2330  000C64  0E04               	movlw	4
  2331  000C66  180D               	xorwf	rgbshowsix@flag,w,c
  2332  000C68  100E               	iorwf	rgbshowsix@flag+1,w,c
  2333  000C6A  A4D8               	btfss	status,2,c
  2334  000C6C  D051               	goto	i2l82
  2335                           
  2336                           ;positive.c: 130: LATCbits.LATC0=0;
  2337  000C6E  908B               	bcf	3979,0,c	;volatile
  2338                           
  2339                           ;positive.c: 131: LATCbits.LATC1=0;
  2340  000C70  928B               	bcf	3979,1,c	;volatile
  2341                           
  2342                           ;positive.c: 132: LATCbits.LATC2=0;
  2343  000C72  948B               	bcf	3979,2,c	;volatile
  2344                           
  2345                           ;positive.c: 133: LATCbits.LATC3=1;
  2346  000C74  868B               	bsf	3979,3,c	;volatile
  2347                           
  2348                           ;positive.c: 134: LATDbits.LATD0=1;
  2349  000C76  808C               	bsf	3980,0,c	;volatile
  2350                           
  2351                           ;positive.c: 135: LATDbits.LATD1=1;
  2352  000C78  828C               	bsf	3980,1,c	;volatile
  2353                           
  2354                           ;positive.c: 136: LATCbits.LATC7=0;
  2355  000C7A  9E8B               	bcf	3979,7,c	;volatile
  2356                           
  2357                           ;positive.c: 137: LATCbits.LATC6=0;
  2358  000C7C  9C8B               	bcf	3979,6,c	;volatile
  2359                           
  2360                           ;positive.c: 138: LATCbits.LATC5=0;
  2361  000C7E  9A8B               	bcf	3979,5,c	;volatile
  2362                           
  2363                           ;positive.c: 139: LATCbits.LATC4=1;
  2364  000C80  888B               	bsf	3979,4,c	;volatile
  2365                           
  2366                           ;positive.c: 140: LATDbits.LATD3=1;
  2367  000C82  868C               	bsf	3980,3,c	;volatile
  2368                           
  2369                           ;positive.c: 141: LATDbits.LATD2=1;
  2370  000C84  848C               	bsf	3980,2,c	;volatile
  2371                           
  2372                           ;positive.c: 143: for(int i=0;i<140;i++){
  2373  000C86  0E00               	movlw	0
  2374  000C88  6E10               	movwf	rgbshowsix@i+1,c
  2375  000C8A  0E00               	movlw	0
  2376  000C8C  6E0F               	movwf	rgbshowsix@i,c
  2377  000C8E  BE10               	btfsc	rgbshowsix@i+1,7,c
  2378  000C90  D008               	goto	i2l83
  2379  000C92  5010               	movf	rgbshowsix@i+1,w,c
  2380  000C94  E105               	bnz	i2u97_40
  2381  000C96  0E8C               	movlw	140
  2382  000C98  5C0F               	subwf	rgbshowsix@i,w,c
  2383  000C9A  B0D8               	btfsc	status,0,c
  2384  000C9C  0012               	return	
  2385  000C9E  D001               	goto	i2l83
  2386  000CA0                     i2u97_40:
  2387  000CA0  0012               	return	
  2388  000CA2                     i2l83:
  2389                           
  2390                           ;positive.c: 144: if((rval--)==0) LATCbits.LATC0=1;
  2391  000CA2  0601               	decf	rgbshowsix@rval,f,c
  2392  000CA4  A0D8               	btfss	status,0,c
  2393  000CA6  0602               	decf	rgbshowsix@rval+1,f,c
  2394  000CA8  2801               	incf	rgbshowsix@rval,w,c
  2395  000CAA  E103               	bnz	i2l1341
  2396  000CAC  2802               	incf	rgbshowsix@rval+1,w,c
  2397  000CAE  B4D8               	btfsc	status,2,c
  2398  000CB0  808B               	bsf	3979,0,c	;volatile
  2399  000CB2                     i2l1341:
  2400                           
  2401                           ;positive.c: 145: if((gval--)==0) LATCbits.LATC1=1;
  2402  000CB2  0603               	decf	rgbshowsix@gval,f,c
  2403  000CB4  A0D8               	btfss	status,0,c
  2404  000CB6  0604               	decf	rgbshowsix@gval+1,f,c
  2405  000CB8  2803               	incf	rgbshowsix@gval,w,c
  2406  000CBA  E103               	bnz	i2l1345
  2407  000CBC  2804               	incf	rgbshowsix@gval+1,w,c
  2408  000CBE  B4D8               	btfsc	status,2,c
  2409  000CC0  828B               	bsf	3979,1,c	;volatile
  2410  000CC2                     i2l1345:
  2411                           
  2412                           ;positive.c: 146: if((bval--)==0) LATCbits.LATC2=1;
  2413  000CC2  0605               	decf	rgbshowsix@bval,f,c
  2414  000CC4  A0D8               	btfss	status,0,c
  2415  000CC6  0606               	decf	rgbshowsix@bval+1,f,c
  2416  000CC8  2805               	incf	rgbshowsix@bval,w,c
  2417  000CCA  E103               	bnz	i2l1349
  2418  000CCC  2806               	incf	rgbshowsix@bval+1,w,c
  2419  000CCE  B4D8               	btfsc	status,2,c
  2420  000CD0  848B               	bsf	3979,2,c	;volatile
  2421  000CD2                     i2l1349:
  2422                           
  2423                           ;positive.c: 147: if((rval2--)==0) LATCbits.LATC7=1;
  2424  000CD2  0607               	decf	rgbshowsix@rval2,f,c
  2425  000CD4  A0D8               	btfss	status,0,c
  2426  000CD6  0608               	decf	rgbshowsix@rval2+1,f,c
  2427  000CD8  2807               	incf	rgbshowsix@rval2,w,c
  2428  000CDA  E103               	bnz	i2l1353
  2429  000CDC  2808               	incf	rgbshowsix@rval2+1,w,c
  2430  000CDE  B4D8               	btfsc	status,2,c
  2431  000CE0  8E8B               	bsf	3979,7,c	;volatile
  2432  000CE2                     i2l1353:
  2433                           
  2434                           ;positive.c: 148: if((gval2--)==0) LATCbits.LATC6=1;
  2435  000CE2  0609               	decf	rgbshowsix@gval2,f,c
  2436  000CE4  A0D8               	btfss	status,0,c
  2437  000CE6  060A               	decf	rgbshowsix@gval2+1,f,c
  2438  000CE8  2809               	incf	rgbshowsix@gval2,w,c
  2439  000CEA  E103               	bnz	i2l1357
  2440  000CEC  280A               	incf	rgbshowsix@gval2+1,w,c
  2441  000CEE  B4D8               	btfsc	status,2,c
  2442  000CF0  8C8B               	bsf	3979,6,c	;volatile
  2443  000CF2                     i2l1357:
  2444                           
  2445                           ;positive.c: 149: if((bval2--)==0) LATCbits.LATC5=1;
  2446  000CF2  060B               	decf	rgbshowsix@bval2,f,c
  2447  000CF4  A0D8               	btfss	status,0,c
  2448  000CF6  060C               	decf	rgbshowsix@bval2+1,f,c
  2449  000CF8  280B               	incf	rgbshowsix@bval2,w,c
  2450  000CFA  E103               	bnz	i2l1361
  2451  000CFC  280C               	incf	rgbshowsix@bval2+1,w,c
  2452  000CFE  B4D8               	btfsc	status,2,c
  2453  000D00  8A8B               	bsf	3979,5,c	;volatile
  2454  000D02                     i2l1361:
  2455  000D02  4A0F               	infsnz	rgbshowsix@i,f,c
  2456  000D04  2A10               	incf	rgbshowsix@i+1,f,c
  2457  000D06  BE10               	btfsc	rgbshowsix@i+1,7,c
  2458  000D08  D7CC               	goto	i2l83
  2459  000D0A  5010               	movf	rgbshowsix@i+1,w,c
  2460  000D0C  E151               	bnz	i2l91
  2461  000D0E  D7C3               	goto	L1
  2462  000D10                     i2l82:
  2463                           
  2464                           ;positive.c: 153: else if(flag==5){
  2465  000D10  0E05               	movlw	5
  2466  000D12  180D               	xorwf	rgbshowsix@flag,w,c
  2467  000D14  100E               	iorwf	rgbshowsix@flag+1,w,c
  2468  000D16  A4D8               	btfss	status,2,c
  2469  000D18  0012               	return	
  2470                           
  2471                           ;positive.c: 154: LATCbits.LATC0=1;
  2472  000D1A  808B               	bsf	3979,0,c	;volatile
  2473                           
  2474                           ;positive.c: 155: LATCbits.LATC1=1;
  2475  000D1C  828B               	bsf	3979,1,c	;volatile
  2476                           
  2477                           ;positive.c: 156: LATCbits.LATC2=1;
  2478  000D1E  848B               	bsf	3979,2,c	;volatile
  2479                           
  2480                           ;positive.c: 157: LATCbits.LATC3=0;
  2481  000D20  968B               	bcf	3979,3,c	;volatile
  2482                           
  2483                           ;positive.c: 158: LATDbits.LATD0=0;
  2484  000D22  908C               	bcf	3980,0,c	;volatile
  2485                           
  2486                           ;positive.c: 159: LATDbits.LATD1=0;
  2487  000D24  928C               	bcf	3980,1,c	;volatile
  2488                           
  2489                           ;positive.c: 160: LATCbits.LATC7=1;
  2490  000D26  8E8B               	bsf	3979,7,c	;volatile
  2491                           
  2492                           ;positive.c: 161: LATCbits.LATC6=1;
  2493  000D28  8C8B               	bsf	3979,6,c	;volatile
  2494                           
  2495                           ;positive.c: 162: LATCbits.LATC5=1;
  2496  000D2A  8A8B               	bsf	3979,5,c	;volatile
  2497                           
  2498                           ;positive.c: 163: LATCbits.LATC4=0;
  2499  000D2C  988B               	bcf	3979,4,c	;volatile
  2500                           
  2501                           ;positive.c: 164: LATDbits.LATD3=0;
  2502  000D2E  968C               	bcf	3980,3,c	;volatile
  2503                           
  2504                           ;positive.c: 165: LATDbits.LATD2=0;
  2505  000D30  948C               	bcf	3980,2,c	;volatile
  2506                           
  2507                           ;positive.c: 167: for(int i=0;i<140;i++){
  2508  000D32  0E00               	movlw	0
  2509  000D34  6E12               	movwf	rgbshowsix@i_547+1,c
  2510  000D36  0E00               	movlw	0
  2511  000D38  6E11               	movwf	rgbshowsix@i_547,c
  2512  000D3A                     i2l1371:
  2513  000D3A  BE12               	btfsc	rgbshowsix@i_547+1,7,c
  2514  000D3C  D006               	goto	i2l93
  2515  000D3E  5012               	movf	rgbshowsix@i_547+1,w,c
  2516  000D40  E137               	bnz	i2l101
  2517  000D42  0E8C               	movlw	140
  2518  000D44  5C11               	subwf	rgbshowsix@i_547,w,c
  2519  000D46  B0D8               	btfsc	status,0,c
  2520  000D48  0012               	return	
  2521  000D4A                     i2l93:
  2522                           
  2523                           ;positive.c: 168: if((rval--)==0) LATCbits.LATC3=1;
  2524  000D4A  0601               	decf	rgbshowsix@rval,f,c
  2525  000D4C  A0D8               	btfss	status,0,c
  2526  000D4E  0602               	decf	rgbshowsix@rval+1,f,c
  2527  000D50  2801               	incf	rgbshowsix@rval,w,c
  2528  000D52  E103               	bnz	i2l1379
  2529  000D54  2802               	incf	rgbshowsix@rval+1,w,c
  2530  000D56  B4D8               	btfsc	status,2,c
  2531  000D58  868B               	bsf	3979,3,c	;volatile
  2532  000D5A                     i2l1379:
  2533                           
  2534                           ;positive.c: 169: if((gval--)==0) LATDbits.LATD0=1;
  2535  000D5A  0603               	decf	rgbshowsix@gval,f,c
  2536  000D5C  A0D8               	btfss	status,0,c
  2537  000D5E  0604               	decf	rgbshowsix@gval+1,f,c
  2538  000D60  2803               	incf	rgbshowsix@gval,w,c
  2539  000D62  E103               	bnz	i2l1383
  2540  000D64  2804               	incf	rgbshowsix@gval+1,w,c
  2541  000D66  B4D8               	btfsc	status,2,c
  2542  000D68  808C               	bsf	3980,0,c	;volatile
  2543  000D6A                     i2l1383:
  2544                           
  2545                           ;positive.c: 170: if((bval--)==0) LATDbits.LATD1=1;
  2546  000D6A  0605               	decf	rgbshowsix@bval,f,c
  2547  000D6C  A0D8               	btfss	status,0,c
  2548  000D6E  0606               	decf	rgbshowsix@bval+1,f,c
  2549  000D70  2805               	incf	rgbshowsix@bval,w,c
  2550  000D72  E103               	bnz	i2l1387
  2551  000D74  2806               	incf	rgbshowsix@bval+1,w,c
  2552  000D76  B4D8               	btfsc	status,2,c
  2553  000D78  828C               	bsf	3980,1,c	;volatile
  2554  000D7A                     i2l1387:
  2555                           
  2556                           ;positive.c: 171: if((rval2--)==0) LATCbits.LATC4=1;
  2557  000D7A  0607               	decf	rgbshowsix@rval2,f,c
  2558  000D7C  A0D8               	btfss	status,0,c
  2559  000D7E  0608               	decf	rgbshowsix@rval2+1,f,c
  2560  000D80  2807               	incf	rgbshowsix@rval2,w,c
  2561  000D82  E103               	bnz	i2l1391
  2562  000D84  2808               	incf	rgbshowsix@rval2+1,w,c
  2563  000D86  B4D8               	btfsc	status,2,c
  2564  000D88  888B               	bsf	3979,4,c	;volatile
  2565  000D8A                     i2l1391:
  2566                           
  2567                           ;positive.c: 172: if((gval2--)==0) LATDbits.LATD3=1;
  2568  000D8A  0609               	decf	rgbshowsix@gval2,f,c
  2569  000D8C  A0D8               	btfss	status,0,c
  2570  000D8E  060A               	decf	rgbshowsix@gval2+1,f,c
  2571  000D90  2809               	incf	rgbshowsix@gval2,w,c
  2572  000D92  E103               	bnz	i2l1395
  2573  000D94  280A               	incf	rgbshowsix@gval2+1,w,c
  2574  000D96  B4D8               	btfsc	status,2,c
  2575  000D98  868C               	bsf	3980,3,c	;volatile
  2576  000D9A                     i2l1395:
  2577                           
  2578                           ;positive.c: 173: if((bval2--)==0) LATDbits.LATD2=1;
  2579  000D9A  060B               	decf	rgbshowsix@bval2,f,c
  2580  000D9C  A0D8               	btfss	status,0,c
  2581  000D9E  060C               	decf	rgbshowsix@bval2+1,f,c
  2582  000DA0  280B               	incf	rgbshowsix@bval2,w,c
  2583  000DA2  E103               	bnz	i2l1399
  2584  000DA4  280C               	incf	rgbshowsix@bval2+1,w,c
  2585  000DA6  B4D8               	btfsc	status,2,c
  2586  000DA8  848C               	bsf	3980,2,c	;volatile
  2587  000DAA                     i2l1399:
  2588  000DAA  4A11               	infsnz	rgbshowsix@i_547,f,c
  2589  000DAC  2A12               	incf	rgbshowsix@i_547+1,f,c
  2590  000DAE  D7C5               	goto	i2l1371
  2591  000DB0                     i2l91:
  2592  000DB0                     i2l101:
  2593  000DB0  0012               	return		;funcret
  2594  000DB2                     __end_of_rgbshowsix:
  2595                           	opt stack 0
  2596                           pclatu	equ	0xFFB
  2597                           pclath	equ	0xFFA
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           prodh	equ	0xFF4
  2603                           prodl	equ	0xFF3
  2604                           intcon	equ	0xFF2
  2605                           intcon2	equ	0xFF1
  2606                           postinc0	equ	0xFEE
  2607                           fsr0h	equ	0xFEA
  2608                           fsr0l	equ	0xFE9
  2609                           wreg	equ	0xFE8
  2610                           fsr1h	equ	0xFE2
  2611                           fsr1l	equ	0xFE1
  2612                           fsr2h	equ	0xFDA
  2613                           fsr2l	equ	0xFD9
  2614                           status	equ	0xFD8
  2615                           
  2616 ;; *************** function _rgbshowone *****************
  2617 ;; Defined at:
  2618 ;;		line 68 in file "positive.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  rval            2    0[COMRAM] int 
  2621 ;;  gval            2    2[COMRAM] int 
  2622 ;;  bval            2    4[COMRAM] int 
  2623 ;;  flag            2    6[COMRAM] int 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  i               2   14[COMRAM] int 
  2626 ;;  i               2   12[COMRAM] int 
  2627 ;;  i               2   10[COMRAM] int 
  2628 ;;  i               2    8[COMRAM] int 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2638 ;;      Params:         8       0       0       0       0       0       0
  2639 ;;      Locals:         8       0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0
  2641 ;;      Totals:        16       0       0       0       0       0       0
  2642 ;;Total ram usage:       16 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_rgbshow
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text9
  2652  000AB2                     __ptext9:
  2653                           	opt stack 0
  2654  000AB2                     _rgbshowone:
  2655                           	opt stack 25
  2656                           
  2657                           ;positive.c: 69: if(flag==0){
  2658                           
  2659                           ;incstack = 0
  2660  000AB2  5007               	movf	rgbshowone@flag,w,c
  2661  000AB4  1008               	iorwf	rgbshowone@flag+1,w,c
  2662  000AB6  A4D8               	btfss	status,2,c
  2663  000AB8  D034               	goto	i2l52
  2664                           
  2665                           ;positive.c: 70: LATCbits.LATC0=0;
  2666  000ABA  908B               	bcf	3979,0,c	;volatile
  2667                           
  2668                           ;positive.c: 71: LATCbits.LATC1=0;
  2669  000ABC  928B               	bcf	3979,1,c	;volatile
  2670                           
  2671                           ;positive.c: 72: LATCbits.LATC2=0;
  2672  000ABE  948B               	bcf	3979,2,c	;volatile
  2673                           
  2674                           ;positive.c: 73: LATCbits.LATC3=1;
  2675  000AC0  868B               	bsf	3979,3,c	;volatile
  2676                           
  2677                           ;positive.c: 74: LATDbits.LATD0=1;
  2678  000AC2  808C               	bsf	3980,0,c	;volatile
  2679                           
  2680                           ;positive.c: 75: LATDbits.LATD1=1;
  2681  000AC4  828C               	bsf	3980,1,c	;volatile
  2682                           
  2683                           ;positive.c: 77: for(int i=0;i<140;i++){
  2684  000AC6  0E00               	movlw	0
  2685  000AC8  6E0A               	movwf	rgbshowone@i+1,c
  2686  000ACA  0E00               	movlw	0
  2687  000ACC  6E09               	movwf	rgbshowone@i,c
  2688  000ACE  BE0A               	btfsc	rgbshowone@i+1,7,c
  2689  000AD0  D008               	goto	i2l53
  2690  000AD2  500A               	movf	rgbshowone@i+1,w,c
  2691  000AD4  E105               	bnz	i2u73_40
  2692  000AD6  0E8C               	movlw	140
  2693  000AD8  5C09               	subwf	rgbshowone@i,w,c
  2694  000ADA  B0D8               	btfsc	status,0,c
  2695  000ADC  0012               	return	
  2696  000ADE  D001               	goto	i2l53
  2697  000AE0                     i2u73_40:
  2698  000AE0  0012               	return	
  2699  000AE2                     i2l53:
  2700                           
  2701                           ;positive.c: 78: if((rval--)==0) LATCbits.LATC0=1;
  2702  000AE2  0601               	decf	rgbshowone@rval,f,c
  2703  000AE4  A0D8               	btfss	status,0,c
  2704  000AE6  0602               	decf	rgbshowone@rval+1,f,c
  2705  000AE8  2801               	incf	rgbshowone@rval,w,c
  2706  000AEA  E103               	bnz	i2l1237
  2707  000AEC  2802               	incf	rgbshowone@rval+1,w,c
  2708  000AEE  B4D8               	btfsc	status,2,c
  2709  000AF0  808B               	bsf	3979,0,c	;volatile
  2710  000AF2                     i2l1237:
  2711                           
  2712                           ;positive.c: 79: if((gval--)==0) LATCbits.LATC1=1;
  2713  000AF2  0603               	decf	rgbshowone@gval,f,c
  2714  000AF4  A0D8               	btfss	status,0,c
  2715  000AF6  0604               	decf	rgbshowone@gval+1,f,c
  2716  000AF8  2803               	incf	rgbshowone@gval,w,c
  2717  000AFA  E103               	bnz	i2l1241
  2718  000AFC  2804               	incf	rgbshowone@gval+1,w,c
  2719  000AFE  B4D8               	btfsc	status,2,c
  2720  000B00  828B               	bsf	3979,1,c	;volatile
  2721  000B02                     i2l1241:
  2722                           
  2723                           ;positive.c: 80: if((bval--)==0) LATCbits.LATC2=1;
  2724  000B02  0605               	decf	rgbshowone@bval,f,c
  2725  000B04  A0D8               	btfss	status,0,c
  2726  000B06  0606               	decf	rgbshowone@bval+1,f,c
  2727  000B08  2805               	incf	rgbshowone@bval,w,c
  2728  000B0A  E103               	bnz	i2l1245
  2729  000B0C  2806               	incf	rgbshowone@bval+1,w,c
  2730  000B0E  B4D8               	btfsc	status,2,c
  2731  000B10  848B               	bsf	3979,2,c	;volatile
  2732  000B12                     i2l1245:
  2733  000B12  4A09               	infsnz	rgbshowone@i,f,c
  2734  000B14  2A0A               	incf	rgbshowone@i+1,f,c
  2735  000B16  BE0A               	btfsc	rgbshowone@i+1,7,c
  2736  000B18  D7E4               	goto	i2l53
  2737  000B1A  500A               	movf	rgbshowone@i+1,w,c
  2738  000B1C  E101               	bnz	i2u77_40
  2739  000B1E  D7DB               	goto	L2
  2740  000B20                     i2u77_40:
  2741                           
  2742                           ;positive.c: 81: }
  2743                           ;positive.c: 82: }
  2744  000B20  0012               	return	
  2745  000B22                     i2l52:
  2746                           
  2747                           ;positive.c: 84: else if(flag==1){
  2748  000B22  0407               	decf	rgbshowone@flag,w,c
  2749  000B24  1008               	iorwf	rgbshowone@flag+1,w,c
  2750  000B26  A4D8               	btfss	status,2,c
  2751  000B28  D034               	goto	i2l59
  2752                           
  2753                           ;positive.c: 85: LATCbits.LATC0=1;
  2754  000B2A  808B               	bsf	3979,0,c	;volatile
  2755                           
  2756                           ;positive.c: 86: LATCbits.LATC1=1;
  2757  000B2C  828B               	bsf	3979,1,c	;volatile
  2758                           
  2759                           ;positive.c: 87: LATCbits.LATC2=1;
  2760  000B2E  848B               	bsf	3979,2,c	;volatile
  2761                           
  2762                           ;positive.c: 88: LATCbits.LATC3=0;
  2763  000B30  968B               	bcf	3979,3,c	;volatile
  2764                           
  2765                           ;positive.c: 89: LATDbits.LATD0=0;
  2766  000B32  908C               	bcf	3980,0,c	;volatile
  2767                           
  2768                           ;positive.c: 90: LATDbits.LATD1=0;
  2769  000B34  928C               	bcf	3980,1,c	;volatile
  2770                           
  2771                           ;positive.c: 92: for(int i=0;i<140;i++){
  2772  000B36  0E00               	movlw	0
  2773  000B38  6E0C               	movwf	rgbshowone@i_535+1,c
  2774  000B3A  0E00               	movlw	0
  2775  000B3C  6E0B               	movwf	rgbshowone@i_535,c
  2776  000B3E  BE0C               	btfsc	rgbshowone@i_535+1,7,c
  2777  000B40  D008               	goto	i2l60
  2778  000B42  500C               	movf	rgbshowone@i_535+1,w,c
  2779  000B44  E105               	bnz	i2u79_40
  2780  000B46  0E8C               	movlw	140
  2781  000B48  5C0B               	subwf	rgbshowone@i_535,w,c
  2782  000B4A  B0D8               	btfsc	status,0,c
  2783  000B4C  0012               	return	
  2784  000B4E  D001               	goto	i2l60
  2785  000B50                     i2u79_40:
  2786  000B50  0012               	return	
  2787  000B52                     i2l60:
  2788                           
  2789                           ;positive.c: 93: if((rval--)==0) LATCbits.LATC3=1;
  2790  000B52  0601               	decf	rgbshowone@rval,f,c
  2791  000B54  A0D8               	btfss	status,0,c
  2792  000B56  0602               	decf	rgbshowone@rval+1,f,c
  2793  000B58  2801               	incf	rgbshowone@rval,w,c
  2794  000B5A  E103               	bnz	i2l1263
  2795  000B5C  2802               	incf	rgbshowone@rval+1,w,c
  2796  000B5E  B4D8               	btfsc	status,2,c
  2797  000B60  868B               	bsf	3979,3,c	;volatile
  2798  000B62                     i2l1263:
  2799                           
  2800                           ;positive.c: 94: if((gval--)==0) LATDbits.LATD0=1;
  2801  000B62  0603               	decf	rgbshowone@gval,f,c
  2802  000B64  A0D8               	btfss	status,0,c
  2803  000B66  0604               	decf	rgbshowone@gval+1,f,c
  2804  000B68  2803               	incf	rgbshowone@gval,w,c
  2805  000B6A  E103               	bnz	i2l1267
  2806  000B6C  2804               	incf	rgbshowone@gval+1,w,c
  2807  000B6E  B4D8               	btfsc	status,2,c
  2808  000B70  808C               	bsf	3980,0,c	;volatile
  2809  000B72                     i2l1267:
  2810                           
  2811                           ;positive.c: 95: if((bval--)==0) LATDbits.LATD1=1;
  2812  000B72  0605               	decf	rgbshowone@bval,f,c
  2813  000B74  A0D8               	btfss	status,0,c
  2814  000B76  0606               	decf	rgbshowone@bval+1,f,c
  2815  000B78  2805               	incf	rgbshowone@bval,w,c
  2816  000B7A  E103               	bnz	i2l1271
  2817  000B7C  2806               	incf	rgbshowone@bval+1,w,c
  2818  000B7E  B4D8               	btfsc	status,2,c
  2819  000B80  828C               	bsf	3980,1,c	;volatile
  2820  000B82                     i2l1271:
  2821  000B82  4A0B               	infsnz	rgbshowone@i_535,f,c
  2822  000B84  2A0C               	incf	rgbshowone@i_535+1,f,c
  2823  000B86  BE0C               	btfsc	rgbshowone@i_535+1,7,c
  2824  000B88  D7E4               	goto	i2l60
  2825  000B8A  500C               	movf	rgbshowone@i_535+1,w,c
  2826  000B8C  E101               	bnz	i2u83_40
  2827  000B8E  D7DB               	goto	L3
  2828  000B90                     i2u83_40:
  2829                           
  2830                           ;positive.c: 96: }
  2831                           ;positive.c: 97: }
  2832  000B90  0012               	return	
  2833  000B92                     i2l59:
  2834                           
  2835                           ;positive.c: 98: else if(flag==2){
  2836  000B92  0E02               	movlw	2
  2837  000B94  1807               	xorwf	rgbshowone@flag,w,c
  2838  000B96  1008               	iorwf	rgbshowone@flag+1,w,c
  2839  000B98  A4D8               	btfss	status,2,c
  2840  000B9A  D031               	goto	i2l66
  2841                           
  2842                           ;positive.c: 99: LATCbits.LATC7=0;
  2843  000B9C  9E8B               	bcf	3979,7,c	;volatile
  2844                           
  2845                           ;positive.c: 100: LATCbits.LATC6=0;
  2846  000B9E  9C8B               	bcf	3979,6,c	;volatile
  2847                           
  2848                           ;positive.c: 101: LATCbits.LATC5=0;
  2849  000BA0  9A8B               	bcf	3979,5,c	;volatile
  2850                           
  2851                           ;positive.c: 102: LATCbits.LATC4=1;
  2852  000BA2  888B               	bsf	3979,4,c	;volatile
  2853                           
  2854                           ;positive.c: 103: LATDbits.LATD3=1;
  2855  000BA4  868C               	bsf	3980,3,c	;volatile
  2856                           
  2857                           ;positive.c: 104: LATDbits.LATD2=1;
  2858  000BA6  848C               	bsf	3980,2,c	;volatile
  2859                           
  2860                           ;positive.c: 105: for(int i=0;i<140;i++){
  2861  000BA8  0E00               	movlw	0
  2862  000BAA  6E0E               	movwf	rgbshowone@i_536+1,c
  2863  000BAC  0E00               	movlw	0
  2864  000BAE  6E0D               	movwf	rgbshowone@i_536,c
  2865  000BB0  BE0E               	btfsc	rgbshowone@i_536+1,7,c
  2866  000BB2  D006               	goto	i2l67
  2867  000BB4  500E               	movf	rgbshowone@i_536+1,w,c
  2868  000BB6  E155               	bnz	i2l58
  2869  000BB8  0E8C               	movlw	140
  2870  000BBA  5C0D               	subwf	rgbshowone@i_536,w,c
  2871  000BBC  B0D8               	btfsc	status,0,c
  2872  000BBE  0012               	return	
  2873  000BC0                     i2l67:
  2874                           
  2875                           ;positive.c: 106: if((rval--)==0) LATCbits.LATC7=1;
  2876  000BC0  0601               	decf	rgbshowone@rval,f,c
  2877  000BC2  A0D8               	btfss	status,0,c
  2878  000BC4  0602               	decf	rgbshowone@rval+1,f,c
  2879  000BC6  2801               	incf	rgbshowone@rval,w,c
  2880  000BC8  E103               	bnz	i2l1289
  2881  000BCA  2802               	incf	rgbshowone@rval+1,w,c
  2882  000BCC  B4D8               	btfsc	status,2,c
  2883  000BCE  8E8B               	bsf	3979,7,c	;volatile
  2884  000BD0                     i2l1289:
  2885                           
  2886                           ;positive.c: 107: if((gval--)==0) LATCbits.LATC6=1;
  2887  000BD0  0603               	decf	rgbshowone@gval,f,c
  2888  000BD2  A0D8               	btfss	status,0,c
  2889  000BD4  0604               	decf	rgbshowone@gval+1,f,c
  2890  000BD6  2803               	incf	rgbshowone@gval,w,c
  2891  000BD8  E103               	bnz	i2l1293
  2892  000BDA  2804               	incf	rgbshowone@gval+1,w,c
  2893  000BDC  B4D8               	btfsc	status,2,c
  2894  000BDE  8C8B               	bsf	3979,6,c	;volatile
  2895  000BE0                     i2l1293:
  2896                           
  2897                           ;positive.c: 108: if((bval--)==0) LATCbits.LATC5=1;
  2898  000BE0  0605               	decf	rgbshowone@bval,f,c
  2899  000BE2  A0D8               	btfss	status,0,c
  2900  000BE4  0606               	decf	rgbshowone@bval+1,f,c
  2901  000BE6  2805               	incf	rgbshowone@bval,w,c
  2902  000BE8  E103               	bnz	i2l1297
  2903  000BEA  2806               	incf	rgbshowone@bval+1,w,c
  2904  000BEC  B4D8               	btfsc	status,2,c
  2905  000BEE  8A8B               	bsf	3979,5,c	;volatile
  2906  000BF0                     i2l1297:
  2907  000BF0  4A0D               	infsnz	rgbshowone@i_536,f,c
  2908  000BF2  2A0E               	incf	rgbshowone@i_536+1,f,c
  2909  000BF4  BE0E               	btfsc	rgbshowone@i_536+1,7,c
  2910  000BF6  D7E4               	goto	i2l67
  2911  000BF8  500E               	movf	rgbshowone@i_536+1,w,c
  2912  000BFA  E133               	bnz	i2l79
  2913  000BFC  D7DD               	goto	L4
  2914  000BFE                     i2l66:
  2915                           
  2916                           ;positive.c: 112: else if(flag==3){
  2917  000BFE  0E03               	movlw	3
  2918  000C00  1807               	xorwf	rgbshowone@flag,w,c
  2919  000C02  1008               	iorwf	rgbshowone@flag+1,w,c
  2920  000C04  A4D8               	btfss	status,2,c
  2921  000C06  0012               	return	
  2922                           
  2923                           ;positive.c: 113: LATCbits.LATC7=1;
  2924  000C08  8E8B               	bsf	3979,7,c	;volatile
  2925                           
  2926                           ;positive.c: 114: LATCbits.LATC6=1;
  2927  000C0A  8C8B               	bsf	3979,6,c	;volatile
  2928                           
  2929                           ;positive.c: 115: LATCbits.LATC5=1;
  2930  000C0C  8A8B               	bsf	3979,5,c	;volatile
  2931                           
  2932                           ;positive.c: 116: LATCbits.LATC4=0;
  2933  000C0E  988B               	bcf	3979,4,c	;volatile
  2934                           
  2935                           ;positive.c: 117: LATDbits.LATD3=0;
  2936  000C10  968C               	bcf	3980,3,c	;volatile
  2937                           
  2938                           ;positive.c: 118: LATDbits.LATD2=0;
  2939  000C12  948C               	bcf	3980,2,c	;volatile
  2940                           
  2941                           ;positive.c: 120: for(int i=0;i<140;i++){
  2942  000C14  0E00               	movlw	0
  2943  000C16  6E10               	movwf	rgbshowone@i_537+1,c
  2944  000C18  0E00               	movlw	0
  2945  000C1A  6E0F               	movwf	rgbshowone@i_537,c
  2946  000C1C                     i2l1307:
  2947  000C1C  BE10               	btfsc	rgbshowone@i_537+1,7,c
  2948  000C1E  D006               	goto	i2l74
  2949  000C20  5010               	movf	rgbshowone@i_537+1,w,c
  2950  000C22  E11F               	bnz	i2l79
  2951  000C24  0E8C               	movlw	140
  2952  000C26  5C0F               	subwf	rgbshowone@i_537,w,c
  2953  000C28  B0D8               	btfsc	status,0,c
  2954  000C2A  0012               	return	
  2955  000C2C                     i2l74:
  2956                           
  2957                           ;positive.c: 121: if((rval--)==0) LATCbits.LATC4=1;
  2958  000C2C  0601               	decf	rgbshowone@rval,f,c
  2959  000C2E  A0D8               	btfss	status,0,c
  2960  000C30  0602               	decf	rgbshowone@rval+1,f,c
  2961  000C32  2801               	incf	rgbshowone@rval,w,c
  2962  000C34  E103               	bnz	i2l1315
  2963  000C36  2802               	incf	rgbshowone@rval+1,w,c
  2964  000C38  B4D8               	btfsc	status,2,c
  2965  000C3A  888B               	bsf	3979,4,c	;volatile
  2966  000C3C                     i2l1315:
  2967                           
  2968                           ;positive.c: 122: if((gval--)==0) LATDbits.LATD3=1;
  2969  000C3C  0603               	decf	rgbshowone@gval,f,c
  2970  000C3E  A0D8               	btfss	status,0,c
  2971  000C40  0604               	decf	rgbshowone@gval+1,f,c
  2972  000C42  2803               	incf	rgbshowone@gval,w,c
  2973  000C44  E103               	bnz	i2l1319
  2974  000C46  2804               	incf	rgbshowone@gval+1,w,c
  2975  000C48  B4D8               	btfsc	status,2,c
  2976  000C4A  868C               	bsf	3980,3,c	;volatile
  2977  000C4C                     i2l1319:
  2978                           
  2979                           ;positive.c: 123: if((bval--)==0) LATDbits.LATD2=1;
  2980  000C4C  0605               	decf	rgbshowone@bval,f,c
  2981  000C4E  A0D8               	btfss	status,0,c
  2982  000C50  0606               	decf	rgbshowone@bval+1,f,c
  2983  000C52  2805               	incf	rgbshowone@bval,w,c
  2984  000C54  E103               	bnz	i2l1323
  2985  000C56  2806               	incf	rgbshowone@bval+1,w,c
  2986  000C58  B4D8               	btfsc	status,2,c
  2987  000C5A  848C               	bsf	3980,2,c	;volatile
  2988  000C5C                     i2l1323:
  2989  000C5C  4A0F               	infsnz	rgbshowone@i_537,f,c
  2990  000C5E  2A10               	incf	rgbshowone@i_537+1,f,c
  2991  000C60  D7DD               	goto	i2l1307
  2992  000C62                     i2l58:
  2993  000C62                     i2l79:
  2994  000C62  0012               	return		;funcret
  2995  000C64                     __end_of_rgbshowone:
  2996                           	opt stack 0
  2997  0000                     pclatu	equ	0xFFB
  2998                           pclath	equ	0xFFA
  2999                           tblptru	equ	0xFF8
  3000                           tblptrh	equ	0xFF7
  3001                           tblptrl	equ	0xFF6
  3002                           tablat	equ	0xFF5
  3003                           prodh	equ	0xFF4
  3004                           prodl	equ	0xFF3
  3005                           intcon	equ	0xFF2
  3006                           intcon2	equ	0xFF1
  3007                           postinc0	equ	0xFEE
  3008                           fsr0h	equ	0xFEA
  3009                           fsr0l	equ	0xFE9
  3010                           wreg	equ	0xFE8
  3011                           fsr1h	equ	0xFE2
  3012                           fsr1l	equ	0xFE1
  3013                           fsr2h	equ	0xFDA
  3014                           fsr2l	equ	0xFD9
  3015                           status	equ	0xFD8
  3016                           pclatu	equ	0xFFB
  3017                           pclath	equ	0xFFA
  3018                           tblptru	equ	0xFF8
  3019                           tblptrh	equ	0xFF7
  3020                           tblptrl	equ	0xFF6
  3021                           tablat	equ	0xFF5
  3022                           prodh	equ	0xFF4
  3023                           prodl	equ	0xFF3
  3024                           intcon	equ	0xFF2
  3025                           intcon2	equ	0xFF1
  3026                           postinc0	equ	0xFEE
  3027                           fsr0h	equ	0xFEA
  3028                           fsr0l	equ	0xFE9
  3029                           wreg	equ	0xFE8
  3030                           fsr1h	equ	0xFE2
  3031                           fsr1l	equ	0xFE1
  3032                           fsr2h	equ	0xFDA
  3033                           fsr2l	equ	0xFD9
  3034                           status	equ	0xFD8
  3035                           
  3036                           	psect	rparam
  3037  0000                     pclatu	equ	0xFFB
  3038                           pclath	equ	0xFFA
  3039                           tblptru	equ	0xFF8
  3040                           tblptrh	equ	0xFF7
  3041                           tblptrl	equ	0xFF6
  3042                           tablat	equ	0xFF5
  3043                           prodh	equ	0xFF4
  3044                           prodl	equ	0xFF3
  3045                           intcon	equ	0xFF2
  3046                           intcon2	equ	0xFF1
  3047                           postinc0	equ	0xFEE
  3048                           fsr0h	equ	0xFEA
  3049                           fsr0l	equ	0xFE9
  3050                           wreg	equ	0xFE8
  3051                           fsr1h	equ	0xFE2
  3052                           fsr1l	equ	0xFE1
  3053                           fsr2h	equ	0xFDA
  3054                           fsr2l	equ	0xFD9
  3055                           status	equ	0xFD8
  3056                           
  3057                           	psect	temp
  3058  000049                     btemp:
  3059                           	opt stack 0
  3060  000049                     	ds	1
  3061  0000                     int$flags	set	btemp
  3062  0000                     wtemp6	set	btemp+1
  3063                           pclatu	equ	0xFFB
  3064                           pclath	equ	0xFFA
  3065                           tblptru	equ	0xFF8
  3066                           tblptrh	equ	0xFF7
  3067                           tblptrl	equ	0xFF6
  3068                           tablat	equ	0xFF5
  3069                           prodh	equ	0xFF4
  3070                           prodl	equ	0xFF3
  3071                           intcon	equ	0xFF2
  3072                           intcon2	equ	0xFF1
  3073                           postinc0	equ	0xFEE
  3074                           fsr0h	equ	0xFEA
  3075                           fsr0l	equ	0xFE9
  3076                           wreg	equ	0xFE8
  3077                           fsr1h	equ	0xFE2
  3078                           fsr1l	equ	0xFE1
  3079                           fsr2h	equ	0xFDA
  3080                           fsr2l	equ	0xFD9
  3081                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     55      72
    BANK0           128      6       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _wstart->_wshow

Critical Paths under _Hi in COMRAM

    _Hi->_rgbstart
    _rgbstart->_rgbshow
    _rgbshow->_rgbshowsix

Critical Paths under _main in BANK0

    _wstart->_wshow

Critical Paths under _Hi in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Hi in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Hi in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Hi in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Hi in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Hi in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     356
                                              2 BANK0      4     4      0
                               _init
                             _wstart
 ---------------------------------------------------------------------------------
 (1) _wstart                                               0     0      0     279
                              _wshow
 ---------------------------------------------------------------------------------
 (2) _wshow                                                4     2      2     279
                                             53 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Hi                                                  18    18      0   20169
                                             35 COMRAM    18    18      0
                           _rgbstart
 ---------------------------------------------------------------------------------
 (4) _rgbstart                                             1     1      0   20169
                                             34 COMRAM     1     1      0
                            _rgbshow
                            _zerorgb
 ---------------------------------------------------------------------------------
 (5) _zerorgb                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _rgbshow                                             16     2     14   20169
                                             18 COMRAM    16     2     14
                         _rgbshowone
                         _rgbshowsix
 ---------------------------------------------------------------------------------
 (6) _rgbshowsix                                          18     4     14     932
                                              0 COMRAM    18     4     14
 ---------------------------------------------------------------------------------
 (6) _rgbshowone                                          16     8      8     840
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _wstart
     _wshow

 _Hi (ROOT)
   _rgbstart
     _rgbshow
       _rgbshowone
       _rgbshowsix
     _zerorgb

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      6       6       4        4.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     37      48       1       57.1%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4E      14        0.0%
DATA                 0      0      4E      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Dec 22 03:07:32 2017

        rgbshowone@i_535 000B          rgbshowone@i_536 000D          rgbshowone@i_537 000F  
         rgbshowone@flag 0007           rgbshowone@bval 0005           rgbshowone@gval 0003  
         rgbshowone@rval 0001                       _Hi 0008           rgbshowsix@flag 000D  
         rgbshowsix@bval 0005           rgbshowsix@gval 0003                      ?_Hi 0001  
         rgbshowsix@rval 0001                      l172 104E                      l181 1028  
                    l182 1016                      l175 1064                      l178 100A  
                    l179 0FFA                      l195 0F60                      l196 0F98  
                    l197 0F76                      l198 0F84                      l199 0F7E  
                    _RB5 007C0D             __CFG_CPD$OFF 000000                      _red 0047  
                    wreg 000FE8          rgbshowsix@i_547 0011                     ??_Hi 0024  
        rgbshowsix@bval2 000B          rgbshowsix@gval2 0009             __CFG_LVP$OFF 000000  
        rgbshowsix@rval2 0007             __CFG_WDT$OFF 000000                     l1601 105E  
                   l1653 0F76                     l1655 0F7E                     l1593 103E  
                   _LATC 000F8B                     _LATD 000F8C                     u1480 0F92  
                   u1490 0FA6                     i2l60 0B52                     i2l52 0B22  
                   i2l53 0AE2                     i2l58 0C62                     i2l74 0C2C  
                   i2l66 0BFE                     i2l82 0D10                     i2l67 0BC0  
                   i2l59 0B92                     i2l91 0DB0                     i2l83 0CA2  
                   i2l93 0D4A                     i2l79 0C62                     _blue 0043  
                   _red2 0041                     _main 0F5C                     _init 0EF6  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0049            __CFG_BOREN$ON 000000                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0001                    ?_init 0001  
                  i2l101 0DB0                    i2l110 0EA8                    i2l105 0E96  
                  i2l121 013A                    i2l106 0E72                    i2l130 0340  
                  i2l122 00AA                    i2l131 02B0                    i2l140 048A  
                  i2l124 01FC                    i2l109 0EE4                    i2l133 03E2  
                  i2l125 016C                    i2l142 05BC                    i2l134 0352  
                  i2l118 0098                    i2l151 07A2                    i2l143 052C  
                  i2l127 029E                    i2l119 0014                    i2l160 0970  
                  i2l152 0712                    i2l136 0478                    i2l128 020E  
                  i2l161 08E0                    i2l145 065E                    i2l137 03E8  
                  i2l154 0838                    i2l146 05CE                    i2l163 0A12  
                  i2l155 07A8                    i2l139 051A                    i2l164 0982  
                  i2l148 0700                    i2l157 08DA                    i2l149 0670  
                  i2l166 0AA8                    i2l158 084A                    i2l167 0A18  
                  i2l189 0E0C                    _TRISC 000F94                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000                    _blue2 003D                    _green 0045  
                  _white 003B                    main@k 0082                    main@l 0084  
                  _wshow 1032          __end_of_rgbshow 0EF6                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8                    wtemp6 004A  
        __end_of_zerorgb 0FF8          __initialization 1066             __end_of_main 0FAE  
           __end_of_init 0F5C                   ??_main 0038                   ??_init 0036  
          __activetblptr 000000                   ?_wshow 0036                   i2l1241 0B02  
                 i2l1323 0C5C                   i2l1315 0C3C                   i2l1307 0C1C  
                 i2l1245 0B12                   i2l1237 0AF2                   i2l1341 0CB2  
                 i2l1413 0EA8                   i2l1319 0C4C                   i2l1271 0B82  
                 i2l1263 0B62                   i2l1415 0EE4                   i2l1511 07A8  
                 i2l1361 0D02                   i2l1353 0CE2                   i2l1345 0CC2  
                 i2l1409 0E72                   i2l1267 0B72                   i2l1371 0D3A  
                 i2l1523 08E0                   i2l1293 0BE0                   i2l1357 0CF2  
                 i2l1349 0CD2                   i2l1391 0D8A                   i2l1383 0D6A  
                 i2l1463 02B0                   i2l1297 0BF0                   i2l1289 0BD0  
                 i2l1395 0D9A                   i2l1387 0D7A                   i2l1379 0D5A  
                 i2l1399 0DAA                   i2l1499 0670                   _green2 003F  
                 clear_0 106C                   _wstart 0FF8         __end_of_rgbstart 0AB2  
              ??_rgbshow 0021                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   wshow@i 0080                ??_zerorgb 0001  
             __accesstop 0080  __end_of__initialization 1072          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_wshow 1066  
             __end_of_Hi 0E58                  ??_wshow 0038                  ?_wstart 0001  
            rgbshow@flag 001F              rgbshow@bval 0017              rgbshow@gval 0015  
            rgbshow@rval 0013                  i2u73_40 0AE0                  i2u83_40 0B90  
                i2u77_40 0B20                  i2u79_40 0B50                  i2u97_40 0CA0  
            rgbshowone@i 0009              rgbshowsix@i 000F                  __Hparam 0000  
              ?_rgbstart 0001                  __Lparam 0000                  __pcinit 1066  
                __ramtop 0600                  __ptext0 0F5C                  __ptext1 0FF8  
                __ptext2 1032                  __ptext3 0EF6                  __ptext5 0012  
                __ptext6 0FAE                  __ptext7 0E58                  __ptext8 0C64  
                __ptext9 0AB2          __size_of_wstart 003A                  _rgbshow 0E58  
         __pintcode_body 0DB2                  _zerorgb 0FAE     end_of_initialization 1072  
             _rgbshowone 0AB2               _rgbshowsix 0C64                  int_func 0DB2  
             ??_rgbstart 0023                  postinc0 000FEE                _PORTBbits 000F81  
              _TRISBbits 000F93      start_initialization 1066           __end_of_wstart 1032  
            ?_rgbshowone 0001              ?_rgbshowsix 0001         __CFG_OSC$INTIO67 000000  
               ??_wstart 0038              __pbssCOMRAM 0038            __pcstackBANK0 0080  
              __pintcode 0008        __size_of_rgbstart 0AA0      __size_of_rgbshowone 01B2  
    __size_of_rgbshowsix 014E                 ?_rgbshow 0013                 ?_zerorgb 0001  
            __size_of_Hi 0E50           __size_of_wshow 0034                 _LATBbits 000F8A  
               _LATCbits 000F8B                 _LATDbits 000F8C             rgbshow@bval2 001D  
           rgbshow@gval2 001B                 i2u121_40 014A                 i2u151_47 0152  
               i2u152_47 0162             rgbshow@rval2 0019                 _RCONbits 000FD0  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_rgbshow 009E                 _distance 0038         __size_of_zerorgb 004A  
           ??_rgbshowone 0009             ??_rgbshowsix 000F            __size_of_main 0052  
          __size_of_init 0066                 _rgbstart 0012                 int$flags 0049  
     __end_of_rgbshowone 0C64       __end_of_rgbshowsix 0DB2               _INTCONbits 000FF2  
               intlevel2 0000                 rgbshow@i 0021               _OSCCONbits 000FD3  
              wshow@wval 0036  
